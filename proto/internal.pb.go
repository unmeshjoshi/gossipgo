// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internal.proto

package proto

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// InternalValueType defines a set of string constants placed in the "tag" field
// of Value messages which are created internally. These are defined as a
// protocol buffer enumeration so that they can be used portably between our Go
// and C code.
type InternalValueType int32

const (
	// _CR_TS is applied to values which contain InternalTimeSeriesData. This
	// tag is used by the RocksDB Merge Operator to perform a specialized merge
	// for this data.
	_CR_TS InternalValueType = 1
)

var InternalValueType_name = map[int32]string{
	1: "_CR_TS",
}

var InternalValueType_value = map[string]int32{
	"_CR_TS": 1,
}

func (x InternalValueType) Enum() *InternalValueType {
	p := new(InternalValueType)
	*p = x
	return p
}

func (x InternalValueType) String() string {
	return proto.EnumName(InternalValueType_name, int32(x))
}

func (x *InternalValueType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(InternalValueType_value, data, "InternalValueType")
	if err != nil {
		return err
	}
	*x = InternalValueType(value)
	return nil
}

func (InternalValueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{0}
}

// An InternalRangeLookupRequest is arguments to the
// InternalRangeLookup() method. It specifies the key for which the
// containing range is being requested, and the maximum number of
// total range descriptors that should be returned, if there are
// additional consecutive addressable ranges. Specify max_ranges > 1
// to pre-fill the range descriptor cache.
type InternalRangeLookupRequest struct {
	RequestHeader        `protobuf:"bytes,1,opt,name=header,embedded=header" json:"header"`
	MaxRanges            int32    `protobuf:"varint,2,opt,name=max_ranges,json=maxRanges" json:"max_ranges"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalRangeLookupRequest) Reset()         { *m = InternalRangeLookupRequest{} }
func (m *InternalRangeLookupRequest) String() string { return proto.CompactTextString(m) }
func (*InternalRangeLookupRequest) ProtoMessage()    {}
func (*InternalRangeLookupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{0}
}
func (m *InternalRangeLookupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalRangeLookupRequest.Unmarshal(m, b)
}
func (m *InternalRangeLookupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalRangeLookupRequest.Marshal(b, m, deterministic)
}
func (m *InternalRangeLookupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalRangeLookupRequest.Merge(m, src)
}
func (m *InternalRangeLookupRequest) XXX_Size() int {
	return xxx_messageInfo_InternalRangeLookupRequest.Size(m)
}
func (m *InternalRangeLookupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalRangeLookupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InternalRangeLookupRequest proto.InternalMessageInfo

func (m *InternalRangeLookupRequest) GetMaxRanges() int32 {
	if m != nil {
		return m.MaxRanges
	}
	return 0
}

// An InternalRangeLookupResponse is the return value from the
// InternalRangeLookup() method. It returns metadata for the range
// containing the requested key, optionally returning the metadata for
// additional consecutive ranges beyond the requested range to pre-fill
// the range descriptor cache.
type InternalRangeLookupResponse struct {
	ResponseHeader       `protobuf:"bytes,1,opt,name=header,embedded=header" json:"header"`
	Ranges               []RangeDescriptor `protobuf:"bytes,2,rep,name=ranges" json:"ranges"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InternalRangeLookupResponse) Reset()         { *m = InternalRangeLookupResponse{} }
func (m *InternalRangeLookupResponse) String() string { return proto.CompactTextString(m) }
func (*InternalRangeLookupResponse) ProtoMessage()    {}
func (*InternalRangeLookupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{1}
}
func (m *InternalRangeLookupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalRangeLookupResponse.Unmarshal(m, b)
}
func (m *InternalRangeLookupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalRangeLookupResponse.Marshal(b, m, deterministic)
}
func (m *InternalRangeLookupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalRangeLookupResponse.Merge(m, src)
}
func (m *InternalRangeLookupResponse) XXX_Size() int {
	return xxx_messageInfo_InternalRangeLookupResponse.Size(m)
}
func (m *InternalRangeLookupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalRangeLookupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InternalRangeLookupResponse proto.InternalMessageInfo

func (m *InternalRangeLookupResponse) GetRanges() []RangeDescriptor {
	if m != nil {
		return m.Ranges
	}
	return nil
}

// An InternalHeartbeatTxnRequest is arguments to the
// InternalHeartbeatTxn() method. It's sent by transaction
// coordinators to let the system know that the transaction is still
// ongoing. Note that this heartbeat message is different from the
// heartbeat message in the gossip protocol.
type InternalHeartbeatTxnRequest struct {
	RequestHeader        `protobuf:"bytes,1,opt,name=header,embedded=header" json:"header"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalHeartbeatTxnRequest) Reset()         { *m = InternalHeartbeatTxnRequest{} }
func (m *InternalHeartbeatTxnRequest) String() string { return proto.CompactTextString(m) }
func (*InternalHeartbeatTxnRequest) ProtoMessage()    {}
func (*InternalHeartbeatTxnRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{2}
}
func (m *InternalHeartbeatTxnRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalHeartbeatTxnRequest.Unmarshal(m, b)
}
func (m *InternalHeartbeatTxnRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalHeartbeatTxnRequest.Marshal(b, m, deterministic)
}
func (m *InternalHeartbeatTxnRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalHeartbeatTxnRequest.Merge(m, src)
}
func (m *InternalHeartbeatTxnRequest) XXX_Size() int {
	return xxx_messageInfo_InternalHeartbeatTxnRequest.Size(m)
}
func (m *InternalHeartbeatTxnRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalHeartbeatTxnRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InternalHeartbeatTxnRequest proto.InternalMessageInfo

// An InternalHeartbeatTxnResponse is the return value from the
// InternalHeartbeatTxn() method. It returns the transaction info in
// the response header. The returned transaction lets the coordinator
// know the disposition of the transaction (i.e. aborted, committed or
// pending).
type InternalHeartbeatTxnResponse struct {
	ResponseHeader       `protobuf:"bytes,1,opt,name=header,embedded=header" json:"header"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalHeartbeatTxnResponse) Reset()         { *m = InternalHeartbeatTxnResponse{} }
func (m *InternalHeartbeatTxnResponse) String() string { return proto.CompactTextString(m) }
func (*InternalHeartbeatTxnResponse) ProtoMessage()    {}
func (*InternalHeartbeatTxnResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{3}
}
func (m *InternalHeartbeatTxnResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalHeartbeatTxnResponse.Unmarshal(m, b)
}
func (m *InternalHeartbeatTxnResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalHeartbeatTxnResponse.Marshal(b, m, deterministic)
}
func (m *InternalHeartbeatTxnResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalHeartbeatTxnResponse.Merge(m, src)
}
func (m *InternalHeartbeatTxnResponse) XXX_Size() int {
	return xxx_messageInfo_InternalHeartbeatTxnResponse.Size(m)
}
func (m *InternalHeartbeatTxnResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalHeartbeatTxnResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InternalHeartbeatTxnResponse proto.InternalMessageInfo

// An InternalPushTxnRequest is arguments to the InternalPushTxn()
// method. It's sent by readers or writers which have encountered an
// "intent" laid down by another transaction. The goal is to resolve
// the conflict. Note that args.Key should be set to the txn ID of
// args.PusheeTxn, not args.Txn, as is usual. This RPC is addressed
// to the range which owns the pushee's txn record.
//
// Resolution is trivial if the txn which owns the intent has either
// been committed or aborted already. Otherwise, the existing txn can
// either be aborted (for write/write conflicts), or its commit
// timestamp can be moved forward (for read/write conflicts). The
// course of action is determined by the owning txn's status and also
// by comparing priorities.
type InternalPushTxnRequest struct {
	RequestHeader `protobuf:"bytes,1,opt,name=header,embedded=header" json:"header"`
	PusheeTxn     Transaction `protobuf:"bytes,2,opt,name=pushee_txn,json=pusheeTxn" json:"pushee_txn"`
	// Set to true to request that the PushTxn be aborted if possible.
	// This is done in the event of a writer conflicting with PusheeTxn.
	// Readers set this to false and instead attempt to move PusheeTxn's
	// commit timestamp forward.
	Abort                bool     `protobuf:"varint,3,opt,name=Abort" json:"Abort"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalPushTxnRequest) Reset()         { *m = InternalPushTxnRequest{} }
func (m *InternalPushTxnRequest) String() string { return proto.CompactTextString(m) }
func (*InternalPushTxnRequest) ProtoMessage()    {}
func (*InternalPushTxnRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{4}
}
func (m *InternalPushTxnRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalPushTxnRequest.Unmarshal(m, b)
}
func (m *InternalPushTxnRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalPushTxnRequest.Marshal(b, m, deterministic)
}
func (m *InternalPushTxnRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalPushTxnRequest.Merge(m, src)
}
func (m *InternalPushTxnRequest) XXX_Size() int {
	return xxx_messageInfo_InternalPushTxnRequest.Size(m)
}
func (m *InternalPushTxnRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalPushTxnRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InternalPushTxnRequest proto.InternalMessageInfo

func (m *InternalPushTxnRequest) GetPusheeTxn() Transaction {
	if m != nil {
		return m.PusheeTxn
	}
	return Transaction{}
}

func (m *InternalPushTxnRequest) GetAbort() bool {
	if m != nil {
		return m.Abort
	}
	return false
}

// An InternalPushTxnResponse is the return value from the
// InternalPushTxn() method. It returns success and the resulting
// state of PusheeTxn if the conflict was resolved in favor of the
// caller; the caller should subsequently invoke
// InternalResolveIntent() on the conflicted key. It returns an error
// otherwise.
type InternalPushTxnResponse struct {
	ResponseHeader `protobuf:"bytes,1,opt,name=header,embedded=header" json:"header"`
	// Txn is non-nil if the transaction could be heartbeat and contains
	// the current value of the transaction.
	PusheeTxn            *Transaction `protobuf:"bytes,2,opt,name=pushee_txn,json=pusheeTxn" json:"pushee_txn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *InternalPushTxnResponse) Reset()         { *m = InternalPushTxnResponse{} }
func (m *InternalPushTxnResponse) String() string { return proto.CompactTextString(m) }
func (*InternalPushTxnResponse) ProtoMessage()    {}
func (*InternalPushTxnResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{5}
}
func (m *InternalPushTxnResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalPushTxnResponse.Unmarshal(m, b)
}
func (m *InternalPushTxnResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalPushTxnResponse.Marshal(b, m, deterministic)
}
func (m *InternalPushTxnResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalPushTxnResponse.Merge(m, src)
}
func (m *InternalPushTxnResponse) XXX_Size() int {
	return xxx_messageInfo_InternalPushTxnResponse.Size(m)
}
func (m *InternalPushTxnResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalPushTxnResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InternalPushTxnResponse proto.InternalMessageInfo

func (m *InternalPushTxnResponse) GetPusheeTxn() *Transaction {
	if m != nil {
		return m.PusheeTxn
	}
	return nil
}

// An InternalResolveIntentRequest is arguments to the
// InternalResolveIntent() method. It is sent by transaction
// coordinators and after success calling InternalPushTxn to clean up
// write intents: either to remove them or commit them.
type InternalResolveIntentRequest struct {
	RequestHeader        `protobuf:"bytes,1,opt,name=header,embedded=header" json:"header"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalResolveIntentRequest) Reset()         { *m = InternalResolveIntentRequest{} }
func (m *InternalResolveIntentRequest) String() string { return proto.CompactTextString(m) }
func (*InternalResolveIntentRequest) ProtoMessage()    {}
func (*InternalResolveIntentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{6}
}
func (m *InternalResolveIntentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalResolveIntentRequest.Unmarshal(m, b)
}
func (m *InternalResolveIntentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalResolveIntentRequest.Marshal(b, m, deterministic)
}
func (m *InternalResolveIntentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalResolveIntentRequest.Merge(m, src)
}
func (m *InternalResolveIntentRequest) XXX_Size() int {
	return xxx_messageInfo_InternalResolveIntentRequest.Size(m)
}
func (m *InternalResolveIntentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalResolveIntentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InternalResolveIntentRequest proto.InternalMessageInfo

// An InternalResolveIntentResponse is the return value from the
// InternalResolveIntent() method.
type InternalResolveIntentResponse struct {
	ResponseHeader       `protobuf:"bytes,1,opt,name=header,embedded=header" json:"header"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalResolveIntentResponse) Reset()         { *m = InternalResolveIntentResponse{} }
func (m *InternalResolveIntentResponse) String() string { return proto.CompactTextString(m) }
func (*InternalResolveIntentResponse) ProtoMessage()    {}
func (*InternalResolveIntentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{7}
}
func (m *InternalResolveIntentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalResolveIntentResponse.Unmarshal(m, b)
}
func (m *InternalResolveIntentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalResolveIntentResponse.Marshal(b, m, deterministic)
}
func (m *InternalResolveIntentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalResolveIntentResponse.Merge(m, src)
}
func (m *InternalResolveIntentResponse) XXX_Size() int {
	return xxx_messageInfo_InternalResolveIntentResponse.Size(m)
}
func (m *InternalResolveIntentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalResolveIntentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InternalResolveIntentResponse proto.InternalMessageInfo

// An InternalMergeRequest contains arguments to the InternalMerge() method. It
// specifies a key and a value which should be merged into the existing value at
// that key.
type InternalMergeRequest struct {
	RequestHeader        `protobuf:"bytes,1,opt,name=header,embedded=header" json:"header"`
	Value                Value    `protobuf:"bytes,2,opt,name=value" json:"value"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalMergeRequest) Reset()         { *m = InternalMergeRequest{} }
func (m *InternalMergeRequest) String() string { return proto.CompactTextString(m) }
func (*InternalMergeRequest) ProtoMessage()    {}
func (*InternalMergeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{8}
}
func (m *InternalMergeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalMergeRequest.Unmarshal(m, b)
}
func (m *InternalMergeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalMergeRequest.Marshal(b, m, deterministic)
}
func (m *InternalMergeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalMergeRequest.Merge(m, src)
}
func (m *InternalMergeRequest) XXX_Size() int {
	return xxx_messageInfo_InternalMergeRequest.Size(m)
}
func (m *InternalMergeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalMergeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InternalMergeRequest proto.InternalMessageInfo

func (m *InternalMergeRequest) GetValue() Value {
	if m != nil {
		return m.Value
	}
	return Value{}
}

// InternalMergeResponse is the response to an InternalMerge() operation.
type InternalMergeResponse struct {
	ResponseHeader       `protobuf:"bytes,1,opt,name=header,embedded=header" json:"header"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalMergeResponse) Reset()         { *m = InternalMergeResponse{} }
func (m *InternalMergeResponse) String() string { return proto.CompactTextString(m) }
func (*InternalMergeResponse) ProtoMessage()    {}
func (*InternalMergeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{9}
}
func (m *InternalMergeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalMergeResponse.Unmarshal(m, b)
}
func (m *InternalMergeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalMergeResponse.Marshal(b, m, deterministic)
}
func (m *InternalMergeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalMergeResponse.Merge(m, src)
}
func (m *InternalMergeResponse) XXX_Size() int {
	return xxx_messageInfo_InternalMergeResponse.Size(m)
}
func (m *InternalMergeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalMergeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InternalMergeResponse proto.InternalMessageInfo

// InternalTruncateLogRequest is used to remove a prefix of the raft log. While there
// is no requirement for correctness that the raft log truncation be synchronized across
// replicas, it is nice to preserve the property that all replicas of a range are as close
// to identical as possible. The raft leader can also inform decisions about the cutoff point
// with its knowledge of the replicas' acknowledgement status.
type InternalTruncateLogRequest struct {
	RequestHeader `protobuf:"bytes,1,opt,name=header,embedded=header" json:"header"`
	// Log entries < this index are to be discarded.
	Index                uint64   `protobuf:"varint,2,opt,name=index" json:"index"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalTruncateLogRequest) Reset()         { *m = InternalTruncateLogRequest{} }
func (m *InternalTruncateLogRequest) String() string { return proto.CompactTextString(m) }
func (*InternalTruncateLogRequest) ProtoMessage()    {}
func (*InternalTruncateLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{10}
}
func (m *InternalTruncateLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalTruncateLogRequest.Unmarshal(m, b)
}
func (m *InternalTruncateLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalTruncateLogRequest.Marshal(b, m, deterministic)
}
func (m *InternalTruncateLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalTruncateLogRequest.Merge(m, src)
}
func (m *InternalTruncateLogRequest) XXX_Size() int {
	return xxx_messageInfo_InternalTruncateLogRequest.Size(m)
}
func (m *InternalTruncateLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalTruncateLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InternalTruncateLogRequest proto.InternalMessageInfo

func (m *InternalTruncateLogRequest) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

// InternalTruncateLogResponse is the response to an InternalTruncateLog() operation.
type InternalTruncateLogResponse struct {
	ResponseHeader       `protobuf:"bytes,1,opt,name=header,embedded=header" json:"header"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalTruncateLogResponse) Reset()         { *m = InternalTruncateLogResponse{} }
func (m *InternalTruncateLogResponse) String() string { return proto.CompactTextString(m) }
func (*InternalTruncateLogResponse) ProtoMessage()    {}
func (*InternalTruncateLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{11}
}
func (m *InternalTruncateLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalTruncateLogResponse.Unmarshal(m, b)
}
func (m *InternalTruncateLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalTruncateLogResponse.Marshal(b, m, deterministic)
}
func (m *InternalTruncateLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalTruncateLogResponse.Merge(m, src)
}
func (m *InternalTruncateLogResponse) XXX_Size() int {
	return xxx_messageInfo_InternalTruncateLogResponse.Size(m)
}
func (m *InternalTruncateLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalTruncateLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InternalTruncateLogResponse proto.InternalMessageInfo

// A ReadWriteCmdResponse is a union type containing instances of all
// mutating commands. Note that any entry added here must be handled
// in roachlib/db.cc in GetResponseHeader().
type ReadWriteCmdResponse struct {
	Put                   *PutResponse                   `protobuf:"bytes,1,opt,name=put" json:"put,omitempty"`
	ConditionalPut        *ConditionalPutResponse        `protobuf:"bytes,2,opt,name=conditional_put,json=conditionalPut" json:"conditional_put,omitempty"`
	Increment             *IncrementResponse             `protobuf:"bytes,3,opt,name=increment" json:"increment,omitempty"`
	Delete                *DeleteResponse                `protobuf:"bytes,4,opt,name=delete" json:"delete,omitempty"`
	DeleteRange           *DeleteRangeResponse           `protobuf:"bytes,5,opt,name=delete_range,json=deleteRange" json:"delete_range,omitempty"`
	EndTransaction        *EndTransactionResponse        `protobuf:"bytes,6,opt,name=end_transaction,json=endTransaction" json:"end_transaction,omitempty"`
	ReapQueue             *ReapQueueResponse             `protobuf:"bytes,7,opt,name=reap_queue,json=reapQueue" json:"reap_queue,omitempty"`
	EnqueueUpdate         *EnqueueUpdateResponse         `protobuf:"bytes,8,opt,name=enqueue_update,json=enqueueUpdate" json:"enqueue_update,omitempty"`
	EnqueueMessage        *EnqueueMessageResponse        `protobuf:"bytes,9,opt,name=enqueue_message,json=enqueueMessage" json:"enqueue_message,omitempty"`
	InternalHeartbeatTxn  *InternalHeartbeatTxnResponse  `protobuf:"bytes,10,opt,name=internal_heartbeat_txn,json=internalHeartbeatTxn" json:"internal_heartbeat_txn,omitempty"`
	InternalPushTxn       *InternalPushTxnResponse       `protobuf:"bytes,11,opt,name=internal_push_txn,json=internalPushTxn" json:"internal_push_txn,omitempty"`
	InternalResolveIntent *InternalResolveIntentResponse `protobuf:"bytes,12,opt,name=internal_resolve_intent,json=internalResolveIntent" json:"internal_resolve_intent,omitempty"`
	InternalMerge         *InternalMergeResponse         `protobuf:"bytes,13,opt,name=internal_merge,json=internalMerge" json:"internal_merge,omitempty"`
	InternalTruncateLog   *InternalTruncateLogResponse   `protobuf:"bytes,14,opt,name=internal_truncate_log,json=internalTruncateLog" json:"internal_truncate_log,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                       `json:"-"`
	XXX_unrecognized      []byte                         `json:"-"`
	XXX_sizecache         int32                          `json:"-"`
}

func (m *ReadWriteCmdResponse) Reset()         { *m = ReadWriteCmdResponse{} }
func (m *ReadWriteCmdResponse) String() string { return proto.CompactTextString(m) }
func (*ReadWriteCmdResponse) ProtoMessage()    {}
func (*ReadWriteCmdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{12}
}
func (m *ReadWriteCmdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadWriteCmdResponse.Unmarshal(m, b)
}
func (m *ReadWriteCmdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadWriteCmdResponse.Marshal(b, m, deterministic)
}
func (m *ReadWriteCmdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadWriteCmdResponse.Merge(m, src)
}
func (m *ReadWriteCmdResponse) XXX_Size() int {
	return xxx_messageInfo_ReadWriteCmdResponse.Size(m)
}
func (m *ReadWriteCmdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadWriteCmdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadWriteCmdResponse proto.InternalMessageInfo

func (m *ReadWriteCmdResponse) GetPut() *PutResponse {
	if m != nil {
		return m.Put
	}
	return nil
}

func (m *ReadWriteCmdResponse) GetConditionalPut() *ConditionalPutResponse {
	if m != nil {
		return m.ConditionalPut
	}
	return nil
}

func (m *ReadWriteCmdResponse) GetIncrement() *IncrementResponse {
	if m != nil {
		return m.Increment
	}
	return nil
}

func (m *ReadWriteCmdResponse) GetDelete() *DeleteResponse {
	if m != nil {
		return m.Delete
	}
	return nil
}

func (m *ReadWriteCmdResponse) GetDeleteRange() *DeleteRangeResponse {
	if m != nil {
		return m.DeleteRange
	}
	return nil
}

func (m *ReadWriteCmdResponse) GetEndTransaction() *EndTransactionResponse {
	if m != nil {
		return m.EndTransaction
	}
	return nil
}

func (m *ReadWriteCmdResponse) GetReapQueue() *ReapQueueResponse {
	if m != nil {
		return m.ReapQueue
	}
	return nil
}

func (m *ReadWriteCmdResponse) GetEnqueueUpdate() *EnqueueUpdateResponse {
	if m != nil {
		return m.EnqueueUpdate
	}
	return nil
}

func (m *ReadWriteCmdResponse) GetEnqueueMessage() *EnqueueMessageResponse {
	if m != nil {
		return m.EnqueueMessage
	}
	return nil
}

func (m *ReadWriteCmdResponse) GetInternalHeartbeatTxn() *InternalHeartbeatTxnResponse {
	if m != nil {
		return m.InternalHeartbeatTxn
	}
	return nil
}

func (m *ReadWriteCmdResponse) GetInternalPushTxn() *InternalPushTxnResponse {
	if m != nil {
		return m.InternalPushTxn
	}
	return nil
}

func (m *ReadWriteCmdResponse) GetInternalResolveIntent() *InternalResolveIntentResponse {
	if m != nil {
		return m.InternalResolveIntent
	}
	return nil
}

func (m *ReadWriteCmdResponse) GetInternalMerge() *InternalMergeResponse {
	if m != nil {
		return m.InternalMerge
	}
	return nil
}

func (m *ReadWriteCmdResponse) GetInternalTruncateLog() *InternalTruncateLogResponse {
	if m != nil {
		return m.InternalTruncateLog
	}
	return nil
}

// An InternalRaftCommandUnion is the union of all commands which can be
// sent via raft.
type InternalRaftCommandUnion struct {
	// Non-batched external requests. This section is the same as RequestUnion.
	Contains       *ContainsRequest       `protobuf:"bytes,1,opt,name=contains" json:"contains,omitempty"`
	Get            *GetRequest            `protobuf:"bytes,2,opt,name=get" json:"get,omitempty"`
	Put            *PutRequest            `protobuf:"bytes,3,opt,name=put" json:"put,omitempty"`
	ConditionalPut *ConditionalPutRequest `protobuf:"bytes,4,opt,name=conditional_put,json=conditionalPut" json:"conditional_put,omitempty"`
	Increment      *IncrementRequest      `protobuf:"bytes,5,opt,name=increment" json:"increment,omitempty"`
	Delete         *DeleteRequest         `protobuf:"bytes,6,opt,name=delete" json:"delete,omitempty"`
	DeleteRange    *DeleteRangeRequest    `protobuf:"bytes,7,opt,name=delete_range,json=deleteRange" json:"delete_range,omitempty"`
	Scan           *ScanRequest           `protobuf:"bytes,8,opt,name=scan" json:"scan,omitempty"`
	EndTransaction *EndTransactionRequest `protobuf:"bytes,9,opt,name=end_transaction,json=endTransaction" json:"end_transaction,omitempty"`
	ReapQueue      *ReapQueueRequest      `protobuf:"bytes,10,opt,name=reap_queue,json=reapQueue" json:"reap_queue,omitempty"`
	EnqueueUpdate  *EnqueueUpdateRequest  `protobuf:"bytes,11,opt,name=enqueue_update,json=enqueueUpdate" json:"enqueue_update,omitempty"`
	EnqueueMessage *EnqueueMessageRequest `protobuf:"bytes,12,opt,name=enqueue_message,json=enqueueMessage" json:"enqueue_message,omitempty"`
	// Other requests. Allow a gap in tag numbers so the previous list can
	// be copy/pasted from RequestUnion.
	Batch                 *BatchRequest                 `protobuf:"bytes,30,opt,name=batch" json:"batch,omitempty"`
	InternalRangeLookup   *InternalRangeLookupRequest   `protobuf:"bytes,31,opt,name=internal_range_lookup,json=internalRangeLookup" json:"internal_range_lookup,omitempty"`
	InternalHeartbeatTxn  *InternalHeartbeatTxnRequest  `protobuf:"bytes,32,opt,name=internal_heartbeat_txn,json=internalHeartbeatTxn" json:"internal_heartbeat_txn,omitempty"`
	InternalPushTxn       *InternalPushTxnRequest       `protobuf:"bytes,33,opt,name=internal_push_txn,json=internalPushTxn" json:"internal_push_txn,omitempty"`
	InternalResolveIntent *InternalResolveIntentRequest `protobuf:"bytes,34,opt,name=internal_resolve_intent,json=internalResolveIntent" json:"internal_resolve_intent,omitempty"`
	InternalMergeResponse *InternalMergeRequest         `protobuf:"bytes,35,opt,name=internal_merge_response,json=internalMergeResponse" json:"internal_merge_response,omitempty"`
	InternalTruncateLog   *InternalTruncateLogRequest   `protobuf:"bytes,36,opt,name=internal_truncate_log,json=internalTruncateLog" json:"internal_truncate_log,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                      `json:"-"`
	XXX_unrecognized      []byte                        `json:"-"`
	XXX_sizecache         int32                         `json:"-"`
}

func (m *InternalRaftCommandUnion) Reset()         { *m = InternalRaftCommandUnion{} }
func (m *InternalRaftCommandUnion) String() string { return proto.CompactTextString(m) }
func (*InternalRaftCommandUnion) ProtoMessage()    {}
func (*InternalRaftCommandUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{13}
}
func (m *InternalRaftCommandUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalRaftCommandUnion.Unmarshal(m, b)
}
func (m *InternalRaftCommandUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalRaftCommandUnion.Marshal(b, m, deterministic)
}
func (m *InternalRaftCommandUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalRaftCommandUnion.Merge(m, src)
}
func (m *InternalRaftCommandUnion) XXX_Size() int {
	return xxx_messageInfo_InternalRaftCommandUnion.Size(m)
}
func (m *InternalRaftCommandUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalRaftCommandUnion.DiscardUnknown(m)
}

var xxx_messageInfo_InternalRaftCommandUnion proto.InternalMessageInfo

func (m *InternalRaftCommandUnion) GetContains() *ContainsRequest {
	if m != nil {
		return m.Contains
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetGet() *GetRequest {
	if m != nil {
		return m.Get
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetPut() *PutRequest {
	if m != nil {
		return m.Put
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetConditionalPut() *ConditionalPutRequest {
	if m != nil {
		return m.ConditionalPut
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetIncrement() *IncrementRequest {
	if m != nil {
		return m.Increment
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetDelete() *DeleteRequest {
	if m != nil {
		return m.Delete
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetDeleteRange() *DeleteRangeRequest {
	if m != nil {
		return m.DeleteRange
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetScan() *ScanRequest {
	if m != nil {
		return m.Scan
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetEndTransaction() *EndTransactionRequest {
	if m != nil {
		return m.EndTransaction
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetReapQueue() *ReapQueueRequest {
	if m != nil {
		return m.ReapQueue
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetEnqueueUpdate() *EnqueueUpdateRequest {
	if m != nil {
		return m.EnqueueUpdate
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetEnqueueMessage() *EnqueueMessageRequest {
	if m != nil {
		return m.EnqueueMessage
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetBatch() *BatchRequest {
	if m != nil {
		return m.Batch
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetInternalRangeLookup() *InternalRangeLookupRequest {
	if m != nil {
		return m.InternalRangeLookup
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetInternalHeartbeatTxn() *InternalHeartbeatTxnRequest {
	if m != nil {
		return m.InternalHeartbeatTxn
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetInternalPushTxn() *InternalPushTxnRequest {
	if m != nil {
		return m.InternalPushTxn
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetInternalResolveIntent() *InternalResolveIntentRequest {
	if m != nil {
		return m.InternalResolveIntent
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetInternalMergeResponse() *InternalMergeRequest {
	if m != nil {
		return m.InternalMergeResponse
	}
	return nil
}

func (m *InternalRaftCommandUnion) GetInternalTruncateLog() *InternalTruncateLogRequest {
	if m != nil {
		return m.InternalTruncateLog
	}
	return nil
}

// An InternalRaftCommand is a command which can be serialized and
// sent via raft.
type InternalRaftCommand struct {
	RaftID               int64                    `protobuf:"varint,2,opt,name=raft_id,json=raftId" json:"raft_id"`
	Cmd                  InternalRaftCommandUnion `protobuf:"bytes,3,opt,name=cmd" json:"cmd"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *InternalRaftCommand) Reset()         { *m = InternalRaftCommand{} }
func (m *InternalRaftCommand) String() string { return proto.CompactTextString(m) }
func (*InternalRaftCommand) ProtoMessage()    {}
func (*InternalRaftCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{14}
}
func (m *InternalRaftCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalRaftCommand.Unmarshal(m, b)
}
func (m *InternalRaftCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalRaftCommand.Marshal(b, m, deterministic)
}
func (m *InternalRaftCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalRaftCommand.Merge(m, src)
}
func (m *InternalRaftCommand) XXX_Size() int {
	return xxx_messageInfo_InternalRaftCommand.Size(m)
}
func (m *InternalRaftCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalRaftCommand.DiscardUnknown(m)
}

var xxx_messageInfo_InternalRaftCommand proto.InternalMessageInfo

func (m *InternalRaftCommand) GetRaftID() int64 {
	if m != nil {
		return m.RaftID
	}
	return 0
}

func (m *InternalRaftCommand) GetCmd() InternalRaftCommandUnion {
	if m != nil {
		return m.Cmd
	}
	return InternalRaftCommandUnion{}
}

// InternalTimeSeriesData is a collection of data samples for some measurable
// value, where each sample is taken over a uniform time interval.
//
// The collection itself contains a start timestamp (in seconds since the unix
// epoch) and a sample duration (in milliseconds). Each sample in the collection
// will contain a positive integer offset that indicates the length of time
// between the start_timestamp of the collection and the time when the sample
// began, expressed as an whole number of sample intervals. For example, if the
// sample duration is 60000 (indicating 1 minute), then a contained sample with
// an offset value of 5 begins (5*60000ms = 300000ms = 5 minutes) after the
// start timestamp of this data.
//
// This is meant to be an efficient internal representation of time series data,
// ensuring that very little redundant data is stored on disk. With this goal in
// mind, this message does not identify the variable which is actually being
// measured; that information is expected be encoded in the key where this
// message is stored.
type InternalTimeSeriesData struct {
	// Holds a wall time, expressed as a unix epoch time in nanoseconds. This
	// represents the earliest possible timestamp for a sample within the
	// collection.
	StartTimestampNanos int64 `protobuf:"varint,1,opt,name=start_timestamp_nanos,json=startTimestampNanos" json:"start_timestamp_nanos"`
	// The duration of each sample interval, expressed in nanoseconds.
	SampleDurationNanos int64 `protobuf:"varint,2,opt,name=sample_duration_nanos,json=sampleDurationNanos" json:"sample_duration_nanos"`
	// The actual data samples for this metric.
	Samples              []*InternalTimeSeriesSample `protobuf:"bytes,3,rep,name=samples" json:"samples,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *InternalTimeSeriesData) Reset()         { *m = InternalTimeSeriesData{} }
func (m *InternalTimeSeriesData) String() string { return proto.CompactTextString(m) }
func (*InternalTimeSeriesData) ProtoMessage()    {}
func (*InternalTimeSeriesData) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{15}
}
func (m *InternalTimeSeriesData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalTimeSeriesData.Unmarshal(m, b)
}
func (m *InternalTimeSeriesData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalTimeSeriesData.Marshal(b, m, deterministic)
}
func (m *InternalTimeSeriesData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalTimeSeriesData.Merge(m, src)
}
func (m *InternalTimeSeriesData) XXX_Size() int {
	return xxx_messageInfo_InternalTimeSeriesData.Size(m)
}
func (m *InternalTimeSeriesData) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalTimeSeriesData.DiscardUnknown(m)
}

var xxx_messageInfo_InternalTimeSeriesData proto.InternalMessageInfo

func (m *InternalTimeSeriesData) GetStartTimestampNanos() int64 {
	if m != nil {
		return m.StartTimestampNanos
	}
	return 0
}

func (m *InternalTimeSeriesData) GetSampleDurationNanos() int64 {
	if m != nil {
		return m.SampleDurationNanos
	}
	return 0
}

func (m *InternalTimeSeriesData) GetSamples() []*InternalTimeSeriesSample {
	if m != nil {
		return m.Samples
	}
	return nil
}

// A InternalTimeSeriesSample represents data gathered from multiple
// measurements of a variable value over a given period of time. The length of
// that period of time is stored in an InternalTimeSeriesData message; a sample
// cannot be interpreted correctly without a start timestamp and sample
// duration.
//
// Each sample may contain data gathered from multiple measurements of the same
// variable, as long as all of those measurements occured within the sample
// period. The sample stores several aggregated values from these measurements:
// - The sum of all measured values
// - A count of all measurements taken
// - The maximum individual measurement seen
// - The minimum individual measurement seen
//
// If zero measurements are present in a sample, then it should be omitted
// entirely from any collection it would be a part of.
//
// If the count of measurements is 1, then max and min fields may be omitted
// and assumed equal to the sum field.
//
// The variable being measured may be either an integer or a floating point;
// therefore, there are two fields each for "sum", "max" and "min" to hold
// either an integer or floating point number. In practice, only one set of
// these fields should be present for any individual sample; however, int and
// float values are recorded in parallel, allowing clients to write both floats
// and integers to the same value. These are recorded separately to retain
// precision, but are easily combined by higher-level logic at query time.
type InternalTimeSeriesSample struct {
	// Temporal offset from the "start_timestamp" of the InternalTimeSeriesData
	// collection this data point is part in. The units of this value are
	// determined by the value of the "sample_duration_milliseconds" field of
	// the TimeSeriesData collection.
	Offset int32 `protobuf:"varint,1,opt,name=offset" json:"offset"`
	// Count of integer measurements taken within this sample.
	IntCount uint32 `protobuf:"varint,2,opt,name=int_count,json=intCount" json:"int_count"`
	// Sum of all integer measurements.
	IntSum *int64 `protobuf:"varint,3,opt,name=int_sum,json=intSum" json:"int_sum,omitempty"`
	// Maximum encountered integer measurement in this sample.
	IntMax *int64 `protobuf:"varint,4,opt,name=int_max,json=intMax" json:"int_max,omitempty"`
	// Minimum encountered integer measurement in this sample.
	IntMin *int64 `protobuf:"varint,5,opt,name=int_min,json=intMin" json:"int_min,omitempty"`
	// Count of floating point measurements taken within this sample.
	FloatCount uint32 `protobuf:"varint,6,opt,name=float_count,json=floatCount" json:"float_count"`
	// Sum of all floating point measurements.
	FloatSum *float32 `protobuf:"fixed32,7,opt,name=float_sum,json=floatSum" json:"float_sum,omitempty"`
	// Maximum encountered floating point measurement in this sample.
	FloatMax *float32 `protobuf:"fixed32,8,opt,name=float_max,json=floatMax" json:"float_max,omitempty"`
	// Minimum encountered floating point measurement in this sample.
	FloatMin             *float32 `protobuf:"fixed32,9,opt,name=float_min,json=floatMin" json:"float_min,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalTimeSeriesSample) Reset()         { *m = InternalTimeSeriesSample{} }
func (m *InternalTimeSeriesSample) String() string { return proto.CompactTextString(m) }
func (*InternalTimeSeriesSample) ProtoMessage()    {}
func (*InternalTimeSeriesSample) Descriptor() ([]byte, []int) {
	return fileDescriptor_41f4a519b878ee3b, []int{16}
}
func (m *InternalTimeSeriesSample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalTimeSeriesSample.Unmarshal(m, b)
}
func (m *InternalTimeSeriesSample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalTimeSeriesSample.Marshal(b, m, deterministic)
}
func (m *InternalTimeSeriesSample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalTimeSeriesSample.Merge(m, src)
}
func (m *InternalTimeSeriesSample) XXX_Size() int {
	return xxx_messageInfo_InternalTimeSeriesSample.Size(m)
}
func (m *InternalTimeSeriesSample) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalTimeSeriesSample.DiscardUnknown(m)
}

var xxx_messageInfo_InternalTimeSeriesSample proto.InternalMessageInfo

func (m *InternalTimeSeriesSample) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *InternalTimeSeriesSample) GetIntCount() uint32 {
	if m != nil {
		return m.IntCount
	}
	return 0
}

func (m *InternalTimeSeriesSample) GetIntSum() int64 {
	if m != nil && m.IntSum != nil {
		return *m.IntSum
	}
	return 0
}

func (m *InternalTimeSeriesSample) GetIntMax() int64 {
	if m != nil && m.IntMax != nil {
		return *m.IntMax
	}
	return 0
}

func (m *InternalTimeSeriesSample) GetIntMin() int64 {
	if m != nil && m.IntMin != nil {
		return *m.IntMin
	}
	return 0
}

func (m *InternalTimeSeriesSample) GetFloatCount() uint32 {
	if m != nil {
		return m.FloatCount
	}
	return 0
}

func (m *InternalTimeSeriesSample) GetFloatSum() float32 {
	if m != nil && m.FloatSum != nil {
		return *m.FloatSum
	}
	return 0
}

func (m *InternalTimeSeriesSample) GetFloatMax() float32 {
	if m != nil && m.FloatMax != nil {
		return *m.FloatMax
	}
	return 0
}

func (m *InternalTimeSeriesSample) GetFloatMin() float32 {
	if m != nil && m.FloatMin != nil {
		return *m.FloatMin
	}
	return 0
}

func init() {
	proto.RegisterEnum("proto.InternalValueType", InternalValueType_name, InternalValueType_value)
	proto.RegisterType((*InternalRangeLookupRequest)(nil), "proto.InternalRangeLookupRequest")
	proto.RegisterType((*InternalRangeLookupResponse)(nil), "proto.InternalRangeLookupResponse")
	proto.RegisterType((*InternalHeartbeatTxnRequest)(nil), "proto.InternalHeartbeatTxnRequest")
	proto.RegisterType((*InternalHeartbeatTxnResponse)(nil), "proto.InternalHeartbeatTxnResponse")
	proto.RegisterType((*InternalPushTxnRequest)(nil), "proto.InternalPushTxnRequest")
	proto.RegisterType((*InternalPushTxnResponse)(nil), "proto.InternalPushTxnResponse")
	proto.RegisterType((*InternalResolveIntentRequest)(nil), "proto.InternalResolveIntentRequest")
	proto.RegisterType((*InternalResolveIntentResponse)(nil), "proto.InternalResolveIntentResponse")
	proto.RegisterType((*InternalMergeRequest)(nil), "proto.InternalMergeRequest")
	proto.RegisterType((*InternalMergeResponse)(nil), "proto.InternalMergeResponse")
	proto.RegisterType((*InternalTruncateLogRequest)(nil), "proto.InternalTruncateLogRequest")
	proto.RegisterType((*InternalTruncateLogResponse)(nil), "proto.InternalTruncateLogResponse")
	proto.RegisterType((*ReadWriteCmdResponse)(nil), "proto.ReadWriteCmdResponse")
	proto.RegisterType((*InternalRaftCommandUnion)(nil), "proto.InternalRaftCommandUnion")
	proto.RegisterType((*InternalRaftCommand)(nil), "proto.InternalRaftCommand")
	proto.RegisterType((*InternalTimeSeriesData)(nil), "proto.InternalTimeSeriesData")
	proto.RegisterType((*InternalTimeSeriesSample)(nil), "proto.InternalTimeSeriesSample")
}

func init() { proto.RegisterFile("internal.proto", fileDescriptor_41f4a519b878ee3b) }

var fileDescriptor_41f4a519b878ee3b = []byte{
	// 1388 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x97, 0xed, 0x6e, 0xdc, 0x44,
	0x17, 0xc7, 0xbb, 0xd9, 0x97, 0xec, 0x9e, 0x4d, 0xd2, 0xa7, 0x93, 0x37, 0x3f, 0xdb, 0x97, 0xa4,
	0x4e, 0x0b, 0x01, 0xd1, 0x56, 0x44, 0xd0, 0x02, 0x82, 0x0f, 0x24, 0x29, 0x34, 0xa8, 0x45, 0xc5,
	0xbb, 0x49, 0x8b, 0x40, 0xb2, 0x26, 0xf6, 0xec, 0xee, 0x88, 0xf5, 0xd8, 0xb5, 0xc7, 0x65, 0x7b,
	0x01, 0x48, 0x7c, 0xe0, 0x22, 0x90, 0x80, 0x6b, 0xa1, 0x1f, 0xb9, 0x82, 0x08, 0xf1, 0x91, 0xab,
	0x40, 0xf3, 0xe2, 0xd7, 0xf5, 0x22, 0xa4, 0xfd, 0xb4, 0xeb, 0x73, 0xce, 0xff, 0x1c, 0x9f, 0x19,
	0x9f, 0x9f, 0xc7, 0xb0, 0x46, 0x19, 0x27, 0x21, 0xc3, 0x93, 0xbb, 0x41, 0xe8, 0x73, 0x1f, 0x35,
	0xe5, 0x4f, 0xaf, 0x83, 0x03, 0xaa, 0x2c, 0xbd, 0x15, 0xc7, 0x67, 0x43, 0x3a, 0xd2, 0x57, 0xe0,
	0x62, 0x8e, 0xf5, 0xff, 0x3b, 0x23, 0xca, 0xc7, 0xf1, 0xf9, 0x5d, 0xc7, 0xf7, 0xee, 0x8d, 0xfc,
	0x91, 0x7f, 0x4f, 0x9a, 0xcf, 0xe3, 0xa1, 0xbc, 0x92, 0x17, 0xf2, 0x9f, 0x0a, 0x37, 0x5f, 0x41,
	0xef, 0x44, 0x17, 0xb3, 0x30, 0x1b, 0x91, 0xc7, 0xbe, 0xff, 0x5d, 0x1c, 0x58, 0xe4, 0x45, 0x4c,
	0x22, 0x8e, 0xee, 0x43, 0x6b, 0x4c, 0xb0, 0x4b, 0x42, 0xa3, 0xb6, 0x5b, 0xdb, 0xef, 0x1e, 0x6c,
	0x28, 0xd5, 0x5d, 0xed, 0x7f, 0x24, 0x7d, 0x87, 0xed, 0xd7, 0x17, 0x3b, 0x97, 0xfe, 0xb8, 0xd8,
	0xa9, 0x59, 0x3a, 0x1a, 0xed, 0x01, 0x78, 0x78, 0x6a, 0x87, 0x22, 0x63, 0x64, 0x2c, 0xed, 0xd6,
	0xf6, 0x9b, 0x87, 0x0d, 0x11, 0x65, 0x75, 0x3c, 0x3c, 0x95, 0x85, 0x22, 0xf3, 0xa7, 0x1a, 0x5c,
	0xad, 0xac, 0x1d, 0x05, 0x3e, 0x8b, 0x08, 0x7a, 0x50, 0x2a, 0xbe, 0x99, 0x16, 0x57, 0x01, 0x73,
	0xab, 0xbf, 0x07, 0xad, 0xb4, 0x72, 0x7d, 0xbf, 0x7b, 0xb0, 0x95, 0x08, 0x85, 0xf1, 0x98, 0x44,
	0x4e, 0x48, 0x03, 0xee, 0x87, 0xfa, 0x8e, 0x74, 0xac, 0x79, 0x9a, 0xdd, 0xcd, 0x23, 0x82, 0x43,
	0x7e, 0x4e, 0x30, 0x1f, 0x4c, 0xd9, 0x82, 0x4b, 0x61, 0x3e, 0x83, 0x6b, 0xd5, 0x69, 0x17, 0xec,
	0xd2, 0xfc, 0xad, 0x06, 0x5b, 0x49, 0xe6, 0xa7, 0x71, 0x34, 0x5e, 0xfc, 0x5e, 0xd1, 0x03, 0x80,
	0x20, 0x8e, 0xc6, 0x84, 0xd8, 0x7c, 0xca, 0xe4, 0xb6, 0x75, 0x0f, 0x90, 0xd6, 0x0e, 0x42, 0xcc,
	0x22, 0xec, 0x70, 0xea, 0xb3, 0x64, 0x2b, 0x55, 0xec, 0x60, 0xca, 0x50, 0x0f, 0x9a, 0x9f, 0x9e,
	0xfb, 0x21, 0x37, 0xea, 0xbb, 0xb5, 0xfd, 0xb6, 0xf6, 0x2b, 0x93, 0xf9, 0x43, 0x0d, 0xb6, 0x67,
	0xee, 0x73, 0xd1, 0x2d, 0x7e, 0xf7, 0xbf, 0xdd, 0x69, 0xee, 0x1e, 0xcd, 0xb3, 0x6c, 0x23, 0x2c,
	0x12, 0xf9, 0x93, 0x97, 0x44, 0x5c, 0x32, 0xbe, 0xe8, 0x06, 0x3f, 0x87, 0xeb, 0x73, 0xf2, 0x2e,
	0xba, 0xc3, 0x53, 0xd8, 0x48, 0x32, 0x3f, 0x21, 0xe1, 0x88, 0x2c, 0xba, 0xbd, 0xfb, 0xd0, 0x7c,
	0x89, 0x27, 0x31, 0xd1, 0xeb, 0xb5, 0xa2, 0x65, 0x67, 0xc2, 0x96, 0xec, 0x99, 0x0c, 0x30, 0x9f,
	0xc2, 0x66, 0xa9, 0xf2, 0xa2, 0xbd, 0x04, 0x19, 0x67, 0x06, 0x61, 0xcc, 0x1c, 0xcc, 0xc9, 0x63,
	0x7f, 0xb4, 0x68, 0x47, 0x3d, 0x68, 0x52, 0xe6, 0x92, 0xa9, 0xec, 0xa8, 0x91, 0xf4, 0x20, 0x4d,
	0xe6, 0x59, 0x36, 0xcf, 0x85, 0x8a, 0x8b, 0x76, 0xf2, 0xe7, 0x32, 0x6c, 0x58, 0x04, 0xbb, 0xcf,
	0x42, 0xca, 0xc9, 0x91, 0xe7, 0xa6, 0x19, 0x6f, 0x41, 0x3d, 0x88, 0xb9, 0x4e, 0x97, 0x3c, 0x8c,
	0x4f, 0xe3, 0xf4, 0x41, 0xb0, 0x84, 0x1b, 0x7d, 0x06, 0x97, 0x1d, 0x9f, 0xb9, 0x54, 0x3c, 0x9e,
	0x78, 0x62, 0x0b, 0x85, 0xda, 0x8e, 0xeb, 0x5a, 0x71, 0x94, 0x79, 0xf3, 0xe2, 0x35, 0xa7, 0x60,
	0x47, 0xf7, 0xa1, 0x43, 0x99, 0x13, 0x12, 0x8f, 0x30, 0x35, 0x76, 0xdd, 0x03, 0x43, 0x67, 0x38,
	0x49, 0xec, 0xa9, 0x38, 0x0b, 0x45, 0x77, 0xa0, 0xe5, 0x92, 0x09, 0xe1, 0xc4, 0x68, 0x14, 0xfa,
	0x3e, 0x96, 0xc6, 0x54, 0xa1, 0x83, 0xd0, 0x27, 0xb0, 0xa2, 0xfe, 0x29, 0x98, 0x1b, 0x4d, 0x29,
	0xea, 0x15, 0x45, 0xc2, 0x93, 0x2a, 0xbb, 0x6e, 0x66, 0x14, 0xdd, 0x12, 0xe6, 0xda, 0x3c, 0x1b,
	0x49, 0xa3, 0x55, 0xe8, 0xf6, 0x21, 0x73, 0xf3, 0xf3, 0x9a, 0x76, 0x4b, 0x0a, 0x76, 0x41, 0xa6,
	0x90, 0xe0, 0xc0, 0x7e, 0x11, 0x93, 0x98, 0x18, 0xcb, 0x85, 0x76, 0x2d, 0x82, 0x83, 0xaf, 0x84,
	0x3d, 0x6b, 0x37, 0x4c, 0x4c, 0xe8, 0x08, 0xd6, 0x08, 0x93, 0x2a, 0x3b, 0x0e, 0x5c, 0xcc, 0x89,
	0xd1, 0x96, 0xe2, 0x6b, 0x69, 0x7d, 0xe9, 0x3c, 0x95, 0xbe, 0x34, 0xc1, 0x2a, 0xc9, 0x9b, 0x55,
	0x17, 0x2a, 0x89, 0x47, 0xa2, 0x08, 0x8f, 0x88, 0xd1, 0x29, 0x75, 0x21, 0xbd, 0x4f, 0x94, 0x33,
	0xdf, 0x45, 0xde, 0x8e, 0xbe, 0x86, 0xad, 0xe4, 0xcd, 0x6e, 0x8f, 0x93, 0x97, 0x81, 0x24, 0x18,
	0xc8, 0x74, 0x7b, 0xe9, 0x06, 0xce, 0x7f, 0x61, 0x58, 0x1b, 0xb4, 0xc2, 0x8b, 0xbe, 0x80, 0x2b,
	0x69, 0x6a, 0xc1, 0x3c, 0x99, 0xb5, 0x2b, 0xb3, 0xde, 0x28, 0x65, 0x2d, 0x41, 0xd8, 0xba, 0x4c,
	0x8b, 0x0e, 0xf4, 0x2d, 0x6c, 0xa7, 0xb9, 0x42, 0x85, 0x34, 0x9b, 0x4a, 0xa6, 0x19, 0x2b, 0x32,
	0xe3, 0xad, 0x52, 0xc6, 0x4a, 0xee, 0x59, 0x9b, 0xb4, 0xca, 0x2d, 0x76, 0x24, 0xcd, 0xee, 0x09,
	0xb8, 0x18, 0xab, 0x85, 0x1d, 0xa9, 0x04, 0x8f, 0xb5, 0x4a, 0xf3, 0x66, 0x74, 0x06, 0x69, 0x76,
	0x9b, 0xeb, 0xe9, 0xb6, 0x27, 0xfe, 0xc8, 0x58, 0x93, 0xb9, 0xcc, 0x52, 0xae, 0x0a, 0x00, 0x58,
	0xeb, 0x74, 0xd6, 0xf9, 0x51, 0xe3, 0xf5, 0xcf, 0x3b, 0x35, 0xf3, 0xef, 0x0e, 0x18, 0xd9, 0xc9,
	0x64, 0xc8, 0x8f, 0x7c, 0xcf, 0xc3, 0xcc, 0x3d, 0x65, 0xe2, 0x51, 0x3c, 0x80, 0xb6, 0xe3, 0x33,
	0x8e, 0x29, 0x8b, 0xf4, 0xac, 0x6f, 0x65, 0x93, 0x2b, 0xcd, 0x9a, 0x5a, 0x56, 0x1a, 0x87, 0xf6,
	0xa0, 0x3e, 0x22, 0xc9, 0xa0, 0x5f, 0xd1, 0xe1, 0x9f, 0x93, 0xe4, 0xdd, 0x63, 0x09, 0xaf, 0x08,
	0x12, 0x34, 0xa8, 0x17, 0x82, 0x24, 0x02, 0x74, 0x90, 0xc0, 0xc7, 0xc3, 0x59, 0x7c, 0x34, 0x0a,
	0xcb, 0x57, 0xc6, 0x87, 0xd2, 0x96, 0xe9, 0xf1, 0x7e, 0x9e, 0x1e, 0x6a, 0xa6, 0xb7, 0x67, 0xe9,
	0xa1, 0xb4, 0x39, 0x78, 0xbc, 0x93, 0xc2, 0xa3, 0x55, 0xe0, 0x74, 0x02, 0x0f, 0x25, 0x48, 0xd8,
	0xf1, 0x71, 0x89, 0x1d, 0x6a, 0x6c, 0xff, 0x5f, 0xc5, 0x0e, 0x25, 0x2c, 0xa0, 0xe3, 0x0d, 0x68,
	0x44, 0x0e, 0x66, 0x7a, 0x5e, 0x13, 0x9e, 0xf6, 0x1d, 0x9c, 0x1c, 0x73, 0x2c, 0xe9, 0x17, 0x2b,
	0x52, 0x46, 0x4c, 0xa7, 0x34, 0xe2, 0x45, 0xc4, 0xe8, 0x15, 0x29, 0x11, 0xe6, 0x7e, 0x81, 0x30,
	0x50, 0x58, 0x92, 0x1c, 0x61, 0xf4, 0x92, 0x64, 0x80, 0x39, 0x9c, 0x01, 0x8c, 0x9a, 0xba, 0xab,
	0xd5, 0x80, 0x51, 0xfa, 0x12, 0x5f, 0x1e, 0xce, 0xf2, 0x65, 0xa5, 0x8a, 0x52, 0x29, 0x5f, 0xd2,
	0x16, 0x0a, 0x78, 0x79, 0x0b, 0x9a, 0xe7, 0x98, 0x3b, 0x63, 0xe3, 0x86, 0x14, 0xaf, 0x6b, 0xf1,
	0xa1, 0xb0, 0x25, 0x1a, 0x15, 0x81, 0x4e, 0x73, 0xf3, 0x23, 0x37, 0xc7, 0x9e, 0xc8, 0xc3, 0xb7,
	0xb1, 0x23, 0xa5, 0x37, 0xcb, 0x03, 0x3e, 0xf3, 0x69, 0x90, 0x8d, 0x4f, 0xce, 0x87, 0x9e, 0xcf,
	0x05, 0xdc, 0x6e, 0xe5, 0x5c, 0x56, 0x1c, 0xb4, 0xe7, 0xf0, 0xed, 0xa4, 0x8a, 0x6f, 0x37, 0x0b,
	0x10, 0xae, 0x3e, 0x0c, 0xcf, 0xe2, 0xed, 0x9b, 0xf9, 0x78, 0x33, 0x2b, 0x31, 0x5c, 0x75, 0x5c,
	0x9c, 0x47, 0xb7, 0x7e, 0x2e, 0xb9, 0xa4, 0x9b, 0x28, 0x21, 0x81, 0x63, 0xec, 0x15, 0x9e, 0x8b,
	0xaa, 0x93, 0x5d, 0x96, 0xb4, 0x78, 0xea, 0x3a, 0x9d, 0x47, 0xbb, 0x5b, 0x95, 0xbb, 0x35, 0x7b,
	0xc0, 0xfa, 0x37, 0xd8, 0x7d, 0x0f, 0xeb, 0x15, 0xac, 0x43, 0x6f, 0xc2, 0x72, 0x88, 0x87, 0xdc,
	0xa6, 0xae, 0xc4, 0x56, 0xfd, 0x70, 0x4d, 0x9c, 0x84, 0xfe, 0xba, 0xd8, 0x69, 0x89, 0xa8, 0x93,
	0x63, 0xf1, 0xdd, 0x34, 0xe4, 0x27, 0x2e, 0x7a, 0x00, 0x75, 0xc7, 0x73, 0x35, 0xb6, 0x76, 0x66,
	0x1e, 0x9c, 0x22, 0x3d, 0xf5, 0x11, 0x4d, 0x28, 0xcc, 0xdf, 0x73, 0x1f, 0x30, 0x03, 0xea, 0x91,
	0x3e, 0x09, 0x29, 0x89, 0x8e, 0x31, 0xc7, 0xe8, 0x03, 0xd8, 0x8c, 0x38, 0x0e, 0xb9, 0xcd, 0xa9,
	0x47, 0x22, 0x8e, 0xbd, 0xc0, 0x66, 0x98, 0xf9, 0x0a, 0xb8, 0x75, 0x9d, 0x64, 0x5d, 0x86, 0x0c,
	0x92, 0x88, 0x2f, 0x45, 0x80, 0x54, 0x62, 0x2f, 0x98, 0x10, 0xdb, 0x8d, 0x43, 0x2c, 0x26, 0x5b,
	0x2b, 0x97, 0x0a, 0x4a, 0x19, 0x72, 0xac, 0x23, 0x94, 0xf2, 0x43, 0x58, 0x56, 0xe6, 0xc8, 0xa8,
	0xcb, 0xcf, 0xc6, 0x72, 0x2f, 0xd9, 0x3d, 0xf6, 0x65, 0x9c, 0x95, 0xc4, 0x9b, 0xbf, 0x2e, 0x65,
	0xef, 0x8b, 0x72, 0x14, 0xba, 0x06, 0x2d, 0x7f, 0x38, 0x8c, 0x88, 0x3a, 0x19, 0x26, 0xdf, 0xc1,
	0xda, 0x86, 0x6e, 0x0a, 0x10, 0x73, 0xdb, 0xf1, 0x63, 0xa6, 0xde, 0x0f, 0xab, 0x3a, 0xa0, 0x4d,
	0x19, 0x3f, 0x12, 0x56, 0xb4, 0x0d, 0xcb, 0x22, 0x24, 0x8a, 0x3d, 0xb9, 0xc8, 0x75, 0xab, 0x45,
	0x19, 0xef, 0xc7, 0x5e, 0xe2, 0xf0, 0xf0, 0x54, 0xbe, 0x03, 0x94, 0xe3, 0x09, 0x9e, 0xa6, 0x0e,
	0xca, 0x24, 0xdb, 0xb5, 0x83, 0x32, 0x74, 0x1b, 0xba, 0xc3, 0x89, 0x8f, 0x93, 0x7a, 0xad, 0x5c,
	0x3d, 0x90, 0x0e, 0x55, 0xf1, 0x2a, 0x74, 0x54, 0x98, 0xa8, 0x29, 0xa8, 0xbd, 0x64, 0xb5, 0xa5,
	0x41, 0x54, 0x4d, 0x9d, 0xa2, 0x6e, 0x3b, 0xe7, 0x14, 0x95, 0x33, 0x27, 0x55, 0x18, 0x4e, 0x9d,
	0x94, 0xbd, 0x7d, 0x1b, 0xae, 0x24, 0xab, 0x24, 0xbf, 0x39, 0x06, 0xaf, 0x02, 0x82, 0x00, 0x5a,
	0xf6, 0x91, 0x65, 0x0f, 0xfa, 0xff, 0xab, 0xf5, 0x1a, 0x3f, 0xfe, 0x72, 0xe3, 0xd2, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x85, 0x7c, 0x3f, 0x99, 0xfe, 0x10, 0x00, 0x00,
}

func (this *ReadWriteCmdResponse) GetValue() interface{} {
	if this.Put != nil {
		return this.Put
	}
	if this.ConditionalPut != nil {
		return this.ConditionalPut
	}
	if this.Increment != nil {
		return this.Increment
	}
	if this.Delete != nil {
		return this.Delete
	}
	if this.DeleteRange != nil {
		return this.DeleteRange
	}
	if this.EndTransaction != nil {
		return this.EndTransaction
	}
	if this.ReapQueue != nil {
		return this.ReapQueue
	}
	if this.EnqueueUpdate != nil {
		return this.EnqueueUpdate
	}
	if this.EnqueueMessage != nil {
		return this.EnqueueMessage
	}
	if this.InternalHeartbeatTxn != nil {
		return this.InternalHeartbeatTxn
	}
	if this.InternalPushTxn != nil {
		return this.InternalPushTxn
	}
	if this.InternalResolveIntent != nil {
		return this.InternalResolveIntent
	}
	if this.InternalMerge != nil {
		return this.InternalMerge
	}
	if this.InternalTruncateLog != nil {
		return this.InternalTruncateLog
	}
	return nil
}

func (this *ReadWriteCmdResponse) SetValue(value interface{}) bool {
	switch vt := value.(type) {
	case *PutResponse:
		this.Put = vt
	case *ConditionalPutResponse:
		this.ConditionalPut = vt
	case *IncrementResponse:
		this.Increment = vt
	case *DeleteResponse:
		this.Delete = vt
	case *DeleteRangeResponse:
		this.DeleteRange = vt
	case *EndTransactionResponse:
		this.EndTransaction = vt
	case *ReapQueueResponse:
		this.ReapQueue = vt
	case *EnqueueUpdateResponse:
		this.EnqueueUpdate = vt
	case *EnqueueMessageResponse:
		this.EnqueueMessage = vt
	case *InternalHeartbeatTxnResponse:
		this.InternalHeartbeatTxn = vt
	case *InternalPushTxnResponse:
		this.InternalPushTxn = vt
	case *InternalResolveIntentResponse:
		this.InternalResolveIntent = vt
	case *InternalMergeResponse:
		this.InternalMerge = vt
	case *InternalTruncateLogResponse:
		this.InternalTruncateLog = vt
	default:
		return false
	}
	return true
}
func (this *InternalRaftCommandUnion) GetValue() interface{} {
	if this.Contains != nil {
		return this.Contains
	}
	if this.Get != nil {
		return this.Get
	}
	if this.Put != nil {
		return this.Put
	}
	if this.ConditionalPut != nil {
		return this.ConditionalPut
	}
	if this.Increment != nil {
		return this.Increment
	}
	if this.Delete != nil {
		return this.Delete
	}
	if this.DeleteRange != nil {
		return this.DeleteRange
	}
	if this.Scan != nil {
		return this.Scan
	}
	if this.EndTransaction != nil {
		return this.EndTransaction
	}
	if this.ReapQueue != nil {
		return this.ReapQueue
	}
	if this.EnqueueUpdate != nil {
		return this.EnqueueUpdate
	}
	if this.EnqueueMessage != nil {
		return this.EnqueueMessage
	}
	if this.Batch != nil {
		return this.Batch
	}
	if this.InternalRangeLookup != nil {
		return this.InternalRangeLookup
	}
	if this.InternalHeartbeatTxn != nil {
		return this.InternalHeartbeatTxn
	}
	if this.InternalPushTxn != nil {
		return this.InternalPushTxn
	}
	if this.InternalResolveIntent != nil {
		return this.InternalResolveIntent
	}
	if this.InternalMergeResponse != nil {
		return this.InternalMergeResponse
	}
	if this.InternalTruncateLog != nil {
		return this.InternalTruncateLog
	}
	return nil
}

func (this *InternalRaftCommandUnion) SetValue(value interface{}) bool {
	switch vt := value.(type) {
	case *ContainsRequest:
		this.Contains = vt
	case *GetRequest:
		this.Get = vt
	case *PutRequest:
		this.Put = vt
	case *ConditionalPutRequest:
		this.ConditionalPut = vt
	case *IncrementRequest:
		this.Increment = vt
	case *DeleteRequest:
		this.Delete = vt
	case *DeleteRangeRequest:
		this.DeleteRange = vt
	case *ScanRequest:
		this.Scan = vt
	case *EndTransactionRequest:
		this.EndTransaction = vt
	case *ReapQueueRequest:
		this.ReapQueue = vt
	case *EnqueueUpdateRequest:
		this.EnqueueUpdate = vt
	case *EnqueueMessageRequest:
		this.EnqueueMessage = vt
	case *BatchRequest:
		this.Batch = vt
	case *InternalRangeLookupRequest:
		this.InternalRangeLookup = vt
	case *InternalHeartbeatTxnRequest:
		this.InternalHeartbeatTxn = vt
	case *InternalPushTxnRequest:
		this.InternalPushTxn = vt
	case *InternalResolveIntentRequest:
		this.InternalResolveIntent = vt
	case *InternalMergeRequest:
		this.InternalMergeResponse = vt
	case *InternalTruncateLogRequest:
		this.InternalTruncateLog = vt
	default:
		return false
	}
	return true
}

// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: config.proto

package proto

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Attributes specifies a list of arbitrary strings describing
// node topology, store type, and machine capabilities.
type Attributes struct {
	Attrs                []string `protobuf:"bytes,1,rep,name=attrs" json:"attrs,omitempty" yaml:"attrs,flow"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attributes) Reset()         { *m = Attributes{} }
func (m *Attributes) String() string { return proto.CompactTextString(m) }
func (*Attributes) ProtoMessage()    {}
func (*Attributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}
func (m *Attributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attributes.Unmarshal(m, b)
}
func (m *Attributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attributes.Marshal(b, m, deterministic)
}
func (m *Attributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attributes.Merge(m, src)
}
func (m *Attributes) XXX_Size() int {
	return xxx_messageInfo_Attributes.Size(m)
}
func (m *Attributes) XXX_DiscardUnknown() {
	xxx_messageInfo_Attributes.DiscardUnknown(m)
}

var xxx_messageInfo_Attributes proto.InternalMessageInfo

func (m *Attributes) GetAttrs() []string {
	if m != nil {
		return m.Attrs
	}
	return nil
}

// Replica describes a replica location by node ID (corresponds to a
// host:port via lookup on gossip network), store ID (identifies the
// device) and associated attributes. Replicas are stored in Range
// lookup records (meta1, meta2).
type Replica struct {
	NodeID  int32 `protobuf:"varint,1,opt,name=node_id,json=nodeId" json:"node_id"`
	StoreID int32 `protobuf:"varint,2,opt,name=store_id,json=storeId" json:"store_id"`
	// Combination of node & store attributes.
	Attrs                Attributes `protobuf:"bytes,3,opt,name=attrs" json:"attrs"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Replica) Reset()         { *m = Replica{} }
func (m *Replica) String() string { return proto.CompactTextString(m) }
func (*Replica) ProtoMessage()    {}
func (*Replica) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{1}
}
func (m *Replica) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Replica.Unmarshal(m, b)
}
func (m *Replica) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Replica.Marshal(b, m, deterministic)
}
func (m *Replica) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Replica.Merge(m, src)
}
func (m *Replica) XXX_Size() int {
	return xxx_messageInfo_Replica.Size(m)
}
func (m *Replica) XXX_DiscardUnknown() {
	xxx_messageInfo_Replica.DiscardUnknown(m)
}

var xxx_messageInfo_Replica proto.InternalMessageInfo

func (m *Replica) GetNodeID() int32 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *Replica) GetStoreID() int32 {
	if m != nil {
		return m.StoreID
	}
	return 0
}

func (m *Replica) GetAttrs() Attributes {
	if m != nil {
		return m.Attrs
	}
	return Attributes{}
}

// RangeDescriptor is the value stored in a range metadata key.
// A range is described using an inclusive start key, a non-inclusive end key,
// and a list of replicas where the range is stored.
type RangeDescriptor struct {
	RaftID int64 `protobuf:"varint,1,opt,name=raft_id,json=raftId" json:"raft_id"`
	// StartKey is the first key which may be contained by this range.
	StartKey Key `protobuf:"bytes,2,opt,name=start_key,json=startKey,customtype=Key" json:"start_key"`
	// EndKey marks the end of the range's possible keys.  EndKey itself is not
	// contained in this range - it will be contained in the immediately
	// subsequent range.
	EndKey Key `protobuf:"bytes,3,opt,name=end_key,json=endKey,customtype=Key" json:"end_key"`
	// List of replicas where this range is stored.
	Replicas             []Replica `protobuf:"bytes,4,rep,name=replicas" json:"replicas"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RangeDescriptor) Reset()         { *m = RangeDescriptor{} }
func (m *RangeDescriptor) String() string { return proto.CompactTextString(m) }
func (*RangeDescriptor) ProtoMessage()    {}
func (*RangeDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{2}
}
func (m *RangeDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeDescriptor.Unmarshal(m, b)
}
func (m *RangeDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeDescriptor.Marshal(b, m, deterministic)
}
func (m *RangeDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeDescriptor.Merge(m, src)
}
func (m *RangeDescriptor) XXX_Size() int {
	return xxx_messageInfo_RangeDescriptor.Size(m)
}
func (m *RangeDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_RangeDescriptor proto.InternalMessageInfo

func (m *RangeDescriptor) GetRaftID() int64 {
	if m != nil {
		return m.RaftID
	}
	return 0
}

func (m *RangeDescriptor) GetReplicas() []Replica {
	if m != nil {
		return m.Replicas
	}
	return nil
}

// GCPolicy defines garbage collection policies which apply to MVCC
// values within a zone.
//
// TODO(spencer): flesh this out to include maximum number of values
//   as well as whether there's an intersection between max values
//   and TTL or a union.
type GCPolicy struct {
	// TTLSeconds specifies the maximum age of a value before it's
	// garbage collected. Only older versions of values are garbage
	// collected. Specifying <=0 mean older versions are never GC'd.
	TTLSeconds           int32    `protobuf:"varint,1,opt,name=ttl_seconds,json=ttlSeconds" json:"ttl_seconds"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GCPolicy) Reset()         { *m = GCPolicy{} }
func (m *GCPolicy) String() string { return proto.CompactTextString(m) }
func (*GCPolicy) ProtoMessage()    {}
func (*GCPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{3}
}
func (m *GCPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCPolicy.Unmarshal(m, b)
}
func (m *GCPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCPolicy.Marshal(b, m, deterministic)
}
func (m *GCPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCPolicy.Merge(m, src)
}
func (m *GCPolicy) XXX_Size() int {
	return xxx_messageInfo_GCPolicy.Size(m)
}
func (m *GCPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_GCPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_GCPolicy proto.InternalMessageInfo

func (m *GCPolicy) GetTTLSeconds() int32 {
	if m != nil {
		return m.TTLSeconds
	}
	return 0
}

// AcctConfig holds accounting configuration.
type AcctConfig struct {
	ClusterId            string   `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id" yaml:"cluster_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcctConfig) Reset()         { *m = AcctConfig{} }
func (m *AcctConfig) String() string { return proto.CompactTextString(m) }
func (*AcctConfig) ProtoMessage()    {}
func (*AcctConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{4}
}
func (m *AcctConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcctConfig.Unmarshal(m, b)
}
func (m *AcctConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcctConfig.Marshal(b, m, deterministic)
}
func (m *AcctConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcctConfig.Merge(m, src)
}
func (m *AcctConfig) XXX_Size() int {
	return xxx_messageInfo_AcctConfig.Size(m)
}
func (m *AcctConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AcctConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AcctConfig proto.InternalMessageInfo

func (m *AcctConfig) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

// PermConfig holds permission configuration, specifying read/write ACLs.
type PermConfig struct {
	// ACL lists users with read permissions.
	Read []string `protobuf:"bytes,1,rep,name=read" json:"read,omitempty" yaml:"read,omitempty"`
	// ACL lists users with write permissions.
	Write                []string `protobuf:"bytes,2,rep,name=write" json:"write,omitempty" yaml:"write,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermConfig) Reset()         { *m = PermConfig{} }
func (m *PermConfig) String() string { return proto.CompactTextString(m) }
func (*PermConfig) ProtoMessage()    {}
func (*PermConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{5}
}
func (m *PermConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermConfig.Unmarshal(m, b)
}
func (m *PermConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermConfig.Marshal(b, m, deterministic)
}
func (m *PermConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermConfig.Merge(m, src)
}
func (m *PermConfig) XXX_Size() int {
	return xxx_messageInfo_PermConfig.Size(m)
}
func (m *PermConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PermConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PermConfig proto.InternalMessageInfo

func (m *PermConfig) GetRead() []string {
	if m != nil {
		return m.Read
	}
	return nil
}

func (m *PermConfig) GetWrite() []string {
	if m != nil {
		return m.Write
	}
	return nil
}

// ZoneConfig holds configuration that is needed for a range of KV pairs.
type ZoneConfig struct {
	// ReplicaAttrs is a slice of Attributes, each describing required
	// attributes for each replica in the zone.
	ReplicaAttrs         []Attributes `protobuf:"bytes,1,rep,name=replica_attrs,json=replicaAttrs" json:"replica_attrs" yaml:"replicas,omitempty"`
	RangeMinBytes        int64        `protobuf:"varint,2,opt,name=range_min_bytes,json=rangeMinBytes" json:"range_min_bytes" yaml:"range_min_bytes,omitempty"`
	RangeMaxBytes        int64        `protobuf:"varint,3,opt,name=range_max_bytes,json=rangeMaxBytes" json:"range_max_bytes" yaml:"range_max_bytes,omitempty"`
	GC                   *GCPolicy    `protobuf:"bytes,4,opt,name=gc" json:"gc,omitempty" yaml:"gc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ZoneConfig) Reset()         { *m = ZoneConfig{} }
func (m *ZoneConfig) String() string { return proto.CompactTextString(m) }
func (*ZoneConfig) ProtoMessage()    {}
func (*ZoneConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{6}
}
func (m *ZoneConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZoneConfig.Unmarshal(m, b)
}
func (m *ZoneConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZoneConfig.Marshal(b, m, deterministic)
}
func (m *ZoneConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZoneConfig.Merge(m, src)
}
func (m *ZoneConfig) XXX_Size() int {
	return xxx_messageInfo_ZoneConfig.Size(m)
}
func (m *ZoneConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ZoneConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ZoneConfig proto.InternalMessageInfo

func (m *ZoneConfig) GetReplicaAttrs() []Attributes {
	if m != nil {
		return m.ReplicaAttrs
	}
	return nil
}

func (m *ZoneConfig) GetRangeMinBytes() int64 {
	if m != nil {
		return m.RangeMinBytes
	}
	return 0
}

func (m *ZoneConfig) GetRangeMaxBytes() int64 {
	if m != nil {
		return m.RangeMaxBytes
	}
	return 0
}

func (m *ZoneConfig) GetGC() *GCPolicy {
	if m != nil {
		return m.GC
	}
	return nil
}

func init() {
	proto.RegisterType((*Attributes)(nil), "proto.Attributes")
	proto.RegisterType((*Replica)(nil), "proto.Replica")
	proto.RegisterType((*RangeDescriptor)(nil), "proto.RangeDescriptor")
	proto.RegisterType((*GCPolicy)(nil), "proto.GCPolicy")
	proto.RegisterType((*AcctConfig)(nil), "proto.AcctConfig")
	proto.RegisterType((*PermConfig)(nil), "proto.PermConfig")
	proto.RegisterType((*ZoneConfig)(nil), "proto.ZoneConfig")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_3eaf2c85e69e9ea4) }

var fileDescriptor_3eaf2c85e69e9ea4 = []byte{
	// 587 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0x5b, 0x6e, 0xd3, 0x4c,
	0x14, 0xfe, 0x6d, 0x27, 0x4d, 0x72, 0xd2, 0x36, 0xea, 0xfc, 0x02, 0xa5, 0xa0, 0xe2, 0x60, 0x90,
	0xb0, 0x50, 0x2f, 0x50, 0x78, 0x42, 0x02, 0x54, 0xb7, 0x52, 0x65, 0x15, 0x50, 0xe4, 0xf6, 0x05,
	0x5e, 0x2c, 0x67, 0x3c, 0x31, 0x16, 0xb6, 0x27, 0x1a, 0x4f, 0xd4, 0x7a, 0x11, 0xec, 0x88, 0x05,
	0x20, 0xb1, 0x03, 0x1e, 0xfc, 0xd0, 0x25, 0x74, 0x05, 0x68, 0x2e, 0x26, 0x46, 0x54, 0x3c, 0x79,
	0xe6, 0x7c, 0x97, 0xf9, 0xe6, 0xcc, 0x31, 0xac, 0x63, 0x5a, 0xcc, 0xd3, 0x64, 0x7f, 0xc1, 0x28,
	0xa7, 0xa8, 0x2b, 0x3f, 0xf7, 0xf6, 0x92, 0x94, 0x7f, 0x5e, 0xce, 0xf6, 0x31, 0xcd, 0x0f, 0x12,
	0x9a, 0xd0, 0x03, 0x59, 0x9e, 0x2d, 0xe7, 0x72, 0x27, 0x37, 0x72, 0xa5, 0x54, 0xce, 0x6b, 0x80,
	0x23, 0xce, 0x59, 0x3a, 0x5b, 0x72, 0x52, 0xa2, 0x03, 0xe8, 0x46, 0x9c, 0xb3, 0x72, 0x6c, 0x4c,
	0x2c, 0x77, 0xe0, 0x6d, 0x7f, 0xaf, 0xed, 0xff, 0x6e, 0x6a, 0x7b, 0xab, 0x8a, 0xf2, 0xec, 0x95,
	0x23, 0xa1, 0xdd, 0x79, 0x46, 0x2f, 0x9d, 0x40, 0xf1, 0x9c, 0xaf, 0x06, 0xf4, 0x02, 0xb2, 0xc8,
	0x52, 0x1c, 0xa1, 0x27, 0xd0, 0x2b, 0x68, 0x4c, 0xc2, 0x34, 0x1e, 0x1b, 0x13, 0xc3, 0xed, 0x7a,
	0x9b, 0x42, 0x7e, 0x5d, 0xdb, 0x6b, 0x1f, 0x68, 0x4c, 0xfc, 0x93, 0x60, 0x4d, 0xc0, 0x7e, 0x8c,
	0x9e, 0x42, 0xbf, 0xe4, 0x94, 0x49, 0xa6, 0x29, 0x99, 0x23, 0xcd, 0xec, 0x9d, 0x8b, 0xba, 0x7f,
	0x12, 0xf4, 0x24, 0xc1, 0x8f, 0xd1, 0x5e, 0x93, 0xc8, 0x9a, 0x18, 0xee, 0xf0, 0x70, 0x4b, 0xc5,
	0xde, 0x5f, 0x65, 0xf6, 0x3a, 0x42, 0xdb, 0xe4, 0xf9, 0x66, 0xc0, 0x28, 0x88, 0x8a, 0x84, 0x9c,
	0x90, 0x12, 0xb3, 0x74, 0xc1, 0x29, 0x13, 0xb9, 0x58, 0x34, 0xe7, 0x4d, 0x2e, 0x6b, 0x95, 0x2b,
	0x88, 0xe6, 0x5c, 0xe4, 0x12, 0xb0, 0x1f, 0x23, 0x17, 0x06, 0x25, 0x8f, 0x18, 0x0f, 0xbf, 0x90,
	0x4a, 0x06, 0x5b, 0xf7, 0x86, 0x82, 0xfa, 0xb3, 0xb6, 0xad, 0x33, 0x52, 0x05, 0x7d, 0x89, 0x9e,
	0x91, 0x0a, 0x3d, 0x86, 0x1e, 0x29, 0x62, 0xc9, 0xb3, 0xfe, 0xe6, 0xad, 0x91, 0x22, 0x16, 0xac,
	0x67, 0xd0, 0x67, 0xaa, 0x37, 0xe5, 0xb8, 0x33, 0xb1, 0xdc, 0xe1, 0xe1, 0xa6, 0x8e, 0xaf, 0x5b,
	0xa6, 0xb3, 0xff, 0x66, 0x39, 0x6f, 0xa1, 0x7f, 0x7a, 0x3c, 0xa5, 0x59, 0x8a, 0x2b, 0xf4, 0x02,
	0x86, 0x9c, 0x67, 0x61, 0x49, 0x30, 0x2d, 0xe2, 0x52, 0xb7, 0x14, 0xe9, 0xe8, 0x70, 0x71, 0xf1,
	0xee, 0x5c, 0x21, 0x01, 0x70, 0x9e, 0xe9, 0xb5, 0x33, 0x05, 0x38, 0xc2, 0x98, 0x1f, 0xcb, 0xc1,
	0x40, 0x1e, 0x00, 0xce, 0x96, 0x25, 0x27, 0xac, 0xb9, 0xfc, 0xc0, 0x7b, 0xa4, 0xdf, 0xf4, 0xbe,
	0x7a, 0xd3, 0x15, 0xbe, 0x4b, 0xf3, 0x94, 0x93, 0x7c, 0xc1, 0x2b, 0x27, 0x18, 0xe8, 0xb2, 0x1f,
	0x3b, 0x4b, 0x80, 0x29, 0x61, 0xb9, 0x76, 0x7c, 0x0e, 0x1d, 0x46, 0xa2, 0x58, 0xcf, 0xc7, 0x8e,
	0xf6, 0xba, 0xa3, 0xbc, 0x04, 0xd2, 0x76, 0x91, 0x54, 0xf4, 0x12, 0xba, 0x97, 0x2c, 0xe5, 0x64,
	0x6c, 0x4a, 0xcd, 0x03, 0xad, 0xb9, 0xab, 0x34, 0x12, 0x6a, 0x8b, 0x14, 0xd9, 0xf9, 0x61, 0x02,
	0x7c, 0xa2, 0x05, 0xd1, 0xe7, 0x7e, 0x84, 0x0d, 0xdd, 0xa4, 0x70, 0x35, 0xa0, 0xb7, 0x8e, 0xc3,
	0x43, 0xed, 0xbf, 0xdd, 0x64, 0x52, 0xad, 0x6d, 0x1f, 0xb1, 0xae, 0x8b, 0x42, 0x55, 0xa2, 0x29,
	0x8c, 0x98, 0x98, 0x98, 0x30, 0x4f, 0x8b, 0x70, 0x56, 0x71, 0x52, 0xca, 0xb7, 0xb7, 0x3c, 0x57,
	0x3b, 0x4d, 0xb4, 0xd3, 0x9f, 0xa4, 0xb6, 0xe1, 0x86, 0xc4, 0xde, 0xa7, 0x85, 0x27, 0x90, 0x96,
	0x63, 0x74, 0xa5, 0x1d, 0xad, 0x7f, 0x38, 0x36, 0xa4, 0x5b, 0x1c, 0xa3, 0x2b, 0xe5, 0xf8, 0x06,
	0xcc, 0x04, 0x8f, 0x3b, 0xf2, 0x17, 0x18, 0xe9, 0x3b, 0x37, 0x83, 0xe2, 0xed, 0x5c, 0xd7, 0xb6,
	0x79, 0x7a, 0x7c, 0x53, 0xdb, 0xff, 0x2b, 0xdf, 0x04, 0xb7, 0xad, 0xcc, 0x04, 0xff, 0x0a, 0x00,
	0x00, 0xff, 0xff, 0x87, 0x3b, 0xd5, 0x6d, 0x2a, 0x04, 0x00, 0x00,
}

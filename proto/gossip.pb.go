// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gossip.proto

package proto

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Addr struct {
	Network              string   `protobuf:"bytes,1,opt,name=network" json:"network"`
	Address              string   `protobuf:"bytes,2,opt,name=address" json:"address"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Addr) Reset()         { *m = Addr{} }
func (m *Addr) String() string { return proto.CompactTextString(m) }
func (*Addr) ProtoMessage()    {}
func (*Addr) Descriptor() ([]byte, []int) {
	return fileDescriptor_878fa4887b90140c, []int{0}
}
func (m *Addr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Addr.Unmarshal(m, b)
}
func (m *Addr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Addr.Marshal(b, m, deterministic)
}
func (m *Addr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Addr.Merge(m, src)
}
func (m *Addr) XXX_Size() int {
	return xxx_messageInfo_Addr.Size(m)
}
func (m *Addr) XXX_DiscardUnknown() {
	xxx_messageInfo_Addr.DiscardUnknown(m)
}

var xxx_messageInfo_Addr proto.InternalMessageInfo

func (m *Addr) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *Addr) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// GossipRequest is the request struct passed with the Gossip RPC.
type GossipRequest struct {
	// Address of requesting node's server.
	Addr Addr `protobuf:"bytes,1,opt,name=addr" json:"addr"`
	// Local address of client on requesting node.
	LAddr Addr `protobuf:"bytes,2,opt,name=l_addr,json=lAddr" json:"l_addr"`
	// Maximum sequence number of gossip from this peer.
	MaxSeq int64 `protobuf:"varint,3,opt,name=max_seq,json=maxSeq" json:"max_seq"`
	// Reciprocal delta of new info since last gossip.
	Delta                []byte   `protobuf:"bytes,4,opt,name=delta" json:"delta"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GossipRequest) Reset()         { *m = GossipRequest{} }
func (m *GossipRequest) String() string { return proto.CompactTextString(m) }
func (*GossipRequest) ProtoMessage()    {}
func (*GossipRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_878fa4887b90140c, []int{1}
}
func (m *GossipRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GossipRequest.Unmarshal(m, b)
}
func (m *GossipRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GossipRequest.Marshal(b, m, deterministic)
}
func (m *GossipRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GossipRequest.Merge(m, src)
}
func (m *GossipRequest) XXX_Size() int {
	return xxx_messageInfo_GossipRequest.Size(m)
}
func (m *GossipRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GossipRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GossipRequest proto.InternalMessageInfo

func (m *GossipRequest) GetAddr() Addr {
	if m != nil {
		return m.Addr
	}
	return Addr{}
}

func (m *GossipRequest) GetLAddr() Addr {
	if m != nil {
		return m.LAddr
	}
	return Addr{}
}

func (m *GossipRequest) GetMaxSeq() int64 {
	if m != nil {
		return m.MaxSeq
	}
	return 0
}

func (m *GossipRequest) GetDelta() []byte {
	if m != nil {
		return m.Delta
	}
	return nil
}

// GossipResponse is returned from the Gossip.Gossip RPC.
// Delta will be nil in the event that Alternate is set.
type GossipResponse struct {
	// Requested delta of server's infostore.
	Delta []byte `protobuf:"bytes,1,opt,name=delta" json:"delta"`
	// Non-nil means client should retry with this address.
	Alternate            *Addr    `protobuf:"bytes,2,opt,name=alternate" json:"alternate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GossipResponse) Reset()         { *m = GossipResponse{} }
func (m *GossipResponse) String() string { return proto.CompactTextString(m) }
func (*GossipResponse) ProtoMessage()    {}
func (*GossipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_878fa4887b90140c, []int{2}
}
func (m *GossipResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GossipResponse.Unmarshal(m, b)
}
func (m *GossipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GossipResponse.Marshal(b, m, deterministic)
}
func (m *GossipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GossipResponse.Merge(m, src)
}
func (m *GossipResponse) XXX_Size() int {
	return xxx_messageInfo_GossipResponse.Size(m)
}
func (m *GossipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GossipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GossipResponse proto.InternalMessageInfo

func (m *GossipResponse) GetDelta() []byte {
	if m != nil {
		return m.Delta
	}
	return nil
}

func (m *GossipResponse) GetAlternate() *Addr {
	if m != nil {
		return m.Alternate
	}
	return nil
}

func init() {
	proto.RegisterType((*Addr)(nil), "proto.Addr")
	proto.RegisterType((*GossipRequest)(nil), "proto.GossipRequest")
	proto.RegisterType((*GossipResponse)(nil), "proto.GossipResponse")
}

func init() { proto.RegisterFile("gossip.proto", fileDescriptor_878fa4887b90140c) }

var fileDescriptor_878fa4887b90140c = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xcf, 0x2f, 0x2e,
	0xce, 0x2c, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0xba, 0xe9, 0x99,
	0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0xe9, 0xf9, 0xe9, 0xf9, 0xfa, 0x60, 0xe1,
	0xa4, 0xd2, 0x34, 0x30, 0x0f, 0xcc, 0x01, 0xb3, 0x20, 0xba, 0x94, 0xdc, 0xb8, 0x58, 0x1c, 0x53,
	0x52, 0x8a, 0x84, 0xe4, 0xb8, 0xd8, 0xf3, 0x52, 0x4b, 0xca, 0xf3, 0x8b, 0xb2, 0x25, 0x18, 0x15,
	0x18, 0x35, 0x38, 0x9d, 0x58, 0x4e, 0xdc, 0x93, 0x67, 0x08, 0x82, 0x09, 0x82, 0xe4, 0x13, 0x53,
	0x52, 0x8a, 0x52, 0x8b, 0x8b, 0x25, 0x98, 0x90, 0xe5, 0xa1, 0x82, 0x4a, 0xb3, 0x19, 0xb9, 0x78,
	0xdd, 0xc1, 0xce, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x52, 0xe5, 0x62, 0x01, 0x49,
	0x82, 0x8d, 0xe3, 0x36, 0xe2, 0x86, 0xd8, 0xa7, 0x07, 0xb2, 0x0c, 0xaa, 0x17, 0x2c, 0x2d, 0xa4,
	0xc1, 0xc5, 0x96, 0x13, 0x0f, 0x56, 0xc8, 0x84, 0x4b, 0x21, 0x6b, 0x0e, 0xd8, 0x89, 0xb2, 0x5c,
	0xec, 0xb9, 0x89, 0x15, 0xf1, 0xc5, 0xa9, 0x85, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0xcc, 0x50, 0x59,
	0xb6, 0xdc, 0xc4, 0x8a, 0xe0, 0xd4, 0x42, 0x21, 0x29, 0x2e, 0xd6, 0x94, 0xd4, 0x9c, 0x92, 0x44,
	0x09, 0x16, 0x05, 0x46, 0x0d, 0x1e, 0x98, 0x56, 0xb0, 0x90, 0x52, 0x38, 0x17, 0x1f, 0xcc, 0x71,
	0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x08, 0xd5, 0x8c, 0x18, 0xaa, 0x85, 0x34, 0xb9, 0x38, 0x13,
	0x73, 0x4a, 0x52, 0x8b, 0xf2, 0x12, 0x4b, 0x52, 0xb1, 0xb8, 0x2a, 0x08, 0x21, 0x0b, 0x08, 0x00,
	0x00, 0xff, 0xff, 0x89, 0x64, 0x64, 0x8f, 0x83, 0x01, 0x00, 0x00,
}

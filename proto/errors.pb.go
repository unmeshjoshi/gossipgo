// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: errors.proto

package proto

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// A GenericError is a generic representation of a go error including
// the string message and whether or not the error is retryable.
type GenericError struct {
	Message              string   `protobuf:"bytes,1,opt,name=message" json:"message"`
	Retryable            bool     `protobuf:"varint,2,opt,name=retryable" json:"retryable"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenericError) Reset()         { *m = GenericError{} }
func (m *GenericError) String() string { return proto.CompactTextString(m) }
func (*GenericError) ProtoMessage()    {}
func (*GenericError) Descriptor() ([]byte, []int) {
	return fileDescriptor_24fe73c7f0ddb19c, []int{0}
}
func (m *GenericError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenericError.Unmarshal(m, b)
}
func (m *GenericError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenericError.Marshal(b, m, deterministic)
}
func (m *GenericError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenericError.Merge(m, src)
}
func (m *GenericError) XXX_Size() int {
	return xxx_messageInfo_GenericError.Size(m)
}
func (m *GenericError) XXX_DiscardUnknown() {
	xxx_messageInfo_GenericError.DiscardUnknown(m)
}

var xxx_messageInfo_GenericError proto.InternalMessageInfo

func (m *GenericError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GenericError) GetRetryable() bool {
	if m != nil {
		return m.Retryable
	}
	return false
}

// A NotLeaderError indicates that the current range is not the
// leader. If the leader is known, its Replica is set in the error.
type NotLeaderError struct {
	Leader               Replica  `protobuf:"bytes,1,opt,name=leader" json:"leader"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotLeaderError) Reset()         { *m = NotLeaderError{} }
func (m *NotLeaderError) String() string { return proto.CompactTextString(m) }
func (*NotLeaderError) ProtoMessage()    {}
func (*NotLeaderError) Descriptor() ([]byte, []int) {
	return fileDescriptor_24fe73c7f0ddb19c, []int{1}
}
func (m *NotLeaderError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotLeaderError.Unmarshal(m, b)
}
func (m *NotLeaderError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotLeaderError.Marshal(b, m, deterministic)
}
func (m *NotLeaderError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotLeaderError.Merge(m, src)
}
func (m *NotLeaderError) XXX_Size() int {
	return xxx_messageInfo_NotLeaderError.Size(m)
}
func (m *NotLeaderError) XXX_DiscardUnknown() {
	xxx_messageInfo_NotLeaderError.DiscardUnknown(m)
}

var xxx_messageInfo_NotLeaderError proto.InternalMessageInfo

func (m *NotLeaderError) GetLeader() Replica {
	if m != nil {
		return m.Leader
	}
	return Replica{}
}

// A RangeNotFoundError indicates that a command was sent to a range
// which is not hosted on this store.
type RangeNotFoundError struct {
	RaftID               int64    `protobuf:"varint,1,opt,name=raft_id,json=raftId" json:"raft_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RangeNotFoundError) Reset()         { *m = RangeNotFoundError{} }
func (m *RangeNotFoundError) String() string { return proto.CompactTextString(m) }
func (*RangeNotFoundError) ProtoMessage()    {}
func (*RangeNotFoundError) Descriptor() ([]byte, []int) {
	return fileDescriptor_24fe73c7f0ddb19c, []int{2}
}
func (m *RangeNotFoundError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeNotFoundError.Unmarshal(m, b)
}
func (m *RangeNotFoundError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeNotFoundError.Marshal(b, m, deterministic)
}
func (m *RangeNotFoundError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeNotFoundError.Merge(m, src)
}
func (m *RangeNotFoundError) XXX_Size() int {
	return xxx_messageInfo_RangeNotFoundError.Size(m)
}
func (m *RangeNotFoundError) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeNotFoundError.DiscardUnknown(m)
}

var xxx_messageInfo_RangeNotFoundError proto.InternalMessageInfo

func (m *RangeNotFoundError) GetRaftID() int64 {
	if m != nil {
		return m.RaftID
	}
	return 0
}

// A RangeKeyMismatchError indicates that a command was sent to a
// range which did not contain the key(s) specified by the command.
type RangeKeyMismatchError struct {
	RequestStartKey      Key              `protobuf:"bytes,1,opt,name=request_start_key,json=requestStartKey,customtype=Key" json:"request_start_key"`
	RequestEndKey        Key              `protobuf:"bytes,2,opt,name=request_end_key,json=requestEndKey,customtype=Key" json:"request_end_key"`
	Range                *RangeDescriptor `protobuf:"bytes,3,opt,name=range" json:"range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RangeKeyMismatchError) Reset()         { *m = RangeKeyMismatchError{} }
func (m *RangeKeyMismatchError) String() string { return proto.CompactTextString(m) }
func (*RangeKeyMismatchError) ProtoMessage()    {}
func (*RangeKeyMismatchError) Descriptor() ([]byte, []int) {
	return fileDescriptor_24fe73c7f0ddb19c, []int{3}
}
func (m *RangeKeyMismatchError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeKeyMismatchError.Unmarshal(m, b)
}
func (m *RangeKeyMismatchError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeKeyMismatchError.Marshal(b, m, deterministic)
}
func (m *RangeKeyMismatchError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeKeyMismatchError.Merge(m, src)
}
func (m *RangeKeyMismatchError) XXX_Size() int {
	return xxx_messageInfo_RangeKeyMismatchError.Size(m)
}
func (m *RangeKeyMismatchError) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeKeyMismatchError.DiscardUnknown(m)
}

var xxx_messageInfo_RangeKeyMismatchError proto.InternalMessageInfo

func (m *RangeKeyMismatchError) GetRange() *RangeDescriptor {
	if m != nil {
		return m.Range
	}
	return nil
}

// A ReadWithinUncertaintyIntervalError indicates that a read at timestamp
// encountered a versioned value at existing_timestamp within the uncertainty
// interval of the reader.
// The read should be retried at existing_timestamp+1.
type ReadWithinUncertaintyIntervalError struct {
	Timestamp            Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp"`
	ExistingTimestamp    Timestamp `protobuf:"bytes,2,opt,name=existing_timestamp,json=existingTimestamp" json:"existing_timestamp"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReadWithinUncertaintyIntervalError) Reset()         { *m = ReadWithinUncertaintyIntervalError{} }
func (m *ReadWithinUncertaintyIntervalError) String() string { return proto.CompactTextString(m) }
func (*ReadWithinUncertaintyIntervalError) ProtoMessage()    {}
func (*ReadWithinUncertaintyIntervalError) Descriptor() ([]byte, []int) {
	return fileDescriptor_24fe73c7f0ddb19c, []int{4}
}
func (m *ReadWithinUncertaintyIntervalError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadWithinUncertaintyIntervalError.Unmarshal(m, b)
}
func (m *ReadWithinUncertaintyIntervalError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadWithinUncertaintyIntervalError.Marshal(b, m, deterministic)
}
func (m *ReadWithinUncertaintyIntervalError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadWithinUncertaintyIntervalError.Merge(m, src)
}
func (m *ReadWithinUncertaintyIntervalError) XXX_Size() int {
	return xxx_messageInfo_ReadWithinUncertaintyIntervalError.Size(m)
}
func (m *ReadWithinUncertaintyIntervalError) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadWithinUncertaintyIntervalError.DiscardUnknown(m)
}

var xxx_messageInfo_ReadWithinUncertaintyIntervalError proto.InternalMessageInfo

func (m *ReadWithinUncertaintyIntervalError) GetTimestamp() Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return Timestamp{}
}

func (m *ReadWithinUncertaintyIntervalError) GetExistingTimestamp() Timestamp {
	if m != nil {
		return m.ExistingTimestamp
	}
	return Timestamp{}
}

// A TransactionAbortedError indicates that the transaction was
// aborted by another concurrent transaction.
type TransactionAbortedError struct {
	Txn                  Transaction `protobuf:"bytes,1,opt,name=txn" json:"txn"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TransactionAbortedError) Reset()         { *m = TransactionAbortedError{} }
func (m *TransactionAbortedError) String() string { return proto.CompactTextString(m) }
func (*TransactionAbortedError) ProtoMessage()    {}
func (*TransactionAbortedError) Descriptor() ([]byte, []int) {
	return fileDescriptor_24fe73c7f0ddb19c, []int{5}
}
func (m *TransactionAbortedError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionAbortedError.Unmarshal(m, b)
}
func (m *TransactionAbortedError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionAbortedError.Marshal(b, m, deterministic)
}
func (m *TransactionAbortedError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionAbortedError.Merge(m, src)
}
func (m *TransactionAbortedError) XXX_Size() int {
	return xxx_messageInfo_TransactionAbortedError.Size(m)
}
func (m *TransactionAbortedError) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionAbortedError.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionAbortedError proto.InternalMessageInfo

func (m *TransactionAbortedError) GetTxn() Transaction {
	if m != nil {
		return m.Txn
	}
	return Transaction{}
}

// A TransactionPushError indicates that the transaction could not
// continu because it encountered a write intent from another
// transaction which it was unable to push.
type TransactionPushError struct {
	// txn can be null in the event the push error happened to a
	// non-transactional method.
	Txn                  *Transaction `protobuf:"bytes,1,opt,name=txn" json:"txn,omitempty"`
	PusheeTxn            Transaction  `protobuf:"bytes,2,opt,name=pushee_txn,json=pusheeTxn" json:"pushee_txn"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TransactionPushError) Reset()         { *m = TransactionPushError{} }
func (m *TransactionPushError) String() string { return proto.CompactTextString(m) }
func (*TransactionPushError) ProtoMessage()    {}
func (*TransactionPushError) Descriptor() ([]byte, []int) {
	return fileDescriptor_24fe73c7f0ddb19c, []int{6}
}
func (m *TransactionPushError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionPushError.Unmarshal(m, b)
}
func (m *TransactionPushError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionPushError.Marshal(b, m, deterministic)
}
func (m *TransactionPushError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionPushError.Merge(m, src)
}
func (m *TransactionPushError) XXX_Size() int {
	return xxx_messageInfo_TransactionPushError.Size(m)
}
func (m *TransactionPushError) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionPushError.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionPushError proto.InternalMessageInfo

func (m *TransactionPushError) GetTxn() *Transaction {
	if m != nil {
		return m.Txn
	}
	return nil
}

func (m *TransactionPushError) GetPusheeTxn() Transaction {
	if m != nil {
		return m.PusheeTxn
	}
	return Transaction{}
}

// A TransactionRetryError indicates that the transaction must be
// retried, usually with an increased transaction timestamp. The
// transaction struct to use is returned with the error.
type TransactionRetryError struct {
	Txn                  Transaction `protobuf:"bytes,1,opt,name=txn" json:"txn"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TransactionRetryError) Reset()         { *m = TransactionRetryError{} }
func (m *TransactionRetryError) String() string { return proto.CompactTextString(m) }
func (*TransactionRetryError) ProtoMessage()    {}
func (*TransactionRetryError) Descriptor() ([]byte, []int) {
	return fileDescriptor_24fe73c7f0ddb19c, []int{7}
}
func (m *TransactionRetryError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionRetryError.Unmarshal(m, b)
}
func (m *TransactionRetryError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionRetryError.Marshal(b, m, deterministic)
}
func (m *TransactionRetryError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRetryError.Merge(m, src)
}
func (m *TransactionRetryError) XXX_Size() int {
	return xxx_messageInfo_TransactionRetryError.Size(m)
}
func (m *TransactionRetryError) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRetryError.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRetryError proto.InternalMessageInfo

func (m *TransactionRetryError) GetTxn() Transaction {
	if m != nil {
		return m.Txn
	}
	return Transaction{}
}

// A TransactionStatusError indicates that the transaction status is
// incompatible with the requested operation. This might mean the
// transaction has already been committed. It might also be the case
// that the request to modify the transaction failed due to a
// regression in transaction epoch or timestamp, both of which may
// only monotonically increase.
type TransactionStatusError struct {
	Txn                  Transaction `protobuf:"bytes,1,opt,name=txn" json:"txn"`
	Msg                  string      `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TransactionStatusError) Reset()         { *m = TransactionStatusError{} }
func (m *TransactionStatusError) String() string { return proto.CompactTextString(m) }
func (*TransactionStatusError) ProtoMessage()    {}
func (*TransactionStatusError) Descriptor() ([]byte, []int) {
	return fileDescriptor_24fe73c7f0ddb19c, []int{8}
}
func (m *TransactionStatusError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionStatusError.Unmarshal(m, b)
}
func (m *TransactionStatusError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionStatusError.Marshal(b, m, deterministic)
}
func (m *TransactionStatusError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionStatusError.Merge(m, src)
}
func (m *TransactionStatusError) XXX_Size() int {
	return xxx_messageInfo_TransactionStatusError.Size(m)
}
func (m *TransactionStatusError) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionStatusError.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionStatusError proto.InternalMessageInfo

func (m *TransactionStatusError) GetTxn() Transaction {
	if m != nil {
		return m.Txn
	}
	return Transaction{}
}

func (m *TransactionStatusError) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// A WriteIntentError indicates that a write intent belonging to
// another transaction was encountered leading to a read/write or
// write/write conflict. The Key at which the intent was encountered
// is set, as is the Txn record for the intent's transaction.
// Resolved is set if the intent was successfully resolved, meaning
// the client may retry the operation immediately. If Resolved is
// false, the client should back off and retry.
type WriteIntentError struct {
	Key                  Key         `protobuf:"bytes,1,opt,name=key,customtype=Key" json:"key"`
	Txn                  Transaction `protobuf:"bytes,2,opt,name=txn" json:"txn"`
	Resolved             bool        `protobuf:"varint,3,opt,name=resolved" json:"resolved"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WriteIntentError) Reset()         { *m = WriteIntentError{} }
func (m *WriteIntentError) String() string { return proto.CompactTextString(m) }
func (*WriteIntentError) ProtoMessage()    {}
func (*WriteIntentError) Descriptor() ([]byte, []int) {
	return fileDescriptor_24fe73c7f0ddb19c, []int{9}
}
func (m *WriteIntentError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteIntentError.Unmarshal(m, b)
}
func (m *WriteIntentError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteIntentError.Marshal(b, m, deterministic)
}
func (m *WriteIntentError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteIntentError.Merge(m, src)
}
func (m *WriteIntentError) XXX_Size() int {
	return xxx_messageInfo_WriteIntentError.Size(m)
}
func (m *WriteIntentError) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteIntentError.DiscardUnknown(m)
}

var xxx_messageInfo_WriteIntentError proto.InternalMessageInfo

func (m *WriteIntentError) GetTxn() Transaction {
	if m != nil {
		return m.Txn
	}
	return Transaction{}
}

func (m *WriteIntentError) GetResolved() bool {
	if m != nil {
		return m.Resolved
	}
	return false
}

// A WriteTooOldError indicates that a write encountered a versioned
// value newer than its timestamp, making it impossible to rewrite
// history. The write should be retried at existing_timestamp+1.
type WriteTooOldError struct {
	Timestamp            Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp"`
	ExistingTimestamp    Timestamp `protobuf:"bytes,2,opt,name=existing_timestamp,json=existingTimestamp" json:"existing_timestamp"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *WriteTooOldError) Reset()         { *m = WriteTooOldError{} }
func (m *WriteTooOldError) String() string { return proto.CompactTextString(m) }
func (*WriteTooOldError) ProtoMessage()    {}
func (*WriteTooOldError) Descriptor() ([]byte, []int) {
	return fileDescriptor_24fe73c7f0ddb19c, []int{10}
}
func (m *WriteTooOldError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteTooOldError.Unmarshal(m, b)
}
func (m *WriteTooOldError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteTooOldError.Marshal(b, m, deterministic)
}
func (m *WriteTooOldError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteTooOldError.Merge(m, src)
}
func (m *WriteTooOldError) XXX_Size() int {
	return xxx_messageInfo_WriteTooOldError.Size(m)
}
func (m *WriteTooOldError) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteTooOldError.DiscardUnknown(m)
}

var xxx_messageInfo_WriteTooOldError proto.InternalMessageInfo

func (m *WriteTooOldError) GetTimestamp() Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return Timestamp{}
}

func (m *WriteTooOldError) GetExistingTimestamp() Timestamp {
	if m != nil {
		return m.ExistingTimestamp
	}
	return Timestamp{}
}

// An OpRequiresTxnError indicates that a command required to be
// carried out in a transactional context but was not.
// For example, a Scan which spans ranges requires a transaction.
// The operation should be retried inside of a transaction.
type OpRequiresTxnError struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpRequiresTxnError) Reset()         { *m = OpRequiresTxnError{} }
func (m *OpRequiresTxnError) String() string { return proto.CompactTextString(m) }
func (*OpRequiresTxnError) ProtoMessage()    {}
func (*OpRequiresTxnError) Descriptor() ([]byte, []int) {
	return fileDescriptor_24fe73c7f0ddb19c, []int{11}
}
func (m *OpRequiresTxnError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpRequiresTxnError.Unmarshal(m, b)
}
func (m *OpRequiresTxnError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpRequiresTxnError.Marshal(b, m, deterministic)
}
func (m *OpRequiresTxnError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpRequiresTxnError.Merge(m, src)
}
func (m *OpRequiresTxnError) XXX_Size() int {
	return xxx_messageInfo_OpRequiresTxnError.Size(m)
}
func (m *OpRequiresTxnError) XXX_DiscardUnknown() {
	xxx_messageInfo_OpRequiresTxnError.DiscardUnknown(m)
}

var xxx_messageInfo_OpRequiresTxnError proto.InternalMessageInfo

// A ConditionFailedError indicates that the expected value
// of a ConditionalPutRequest was not found, either
// because it was missing or was not equal. The error will
// contain the actual value found.
type ConditionFailedError struct {
	ActualValue          *Value   `protobuf:"bytes,1,opt,name=actual_value,json=actualValue" json:"actual_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConditionFailedError) Reset()         { *m = ConditionFailedError{} }
func (m *ConditionFailedError) String() string { return proto.CompactTextString(m) }
func (*ConditionFailedError) ProtoMessage()    {}
func (*ConditionFailedError) Descriptor() ([]byte, []int) {
	return fileDescriptor_24fe73c7f0ddb19c, []int{12}
}
func (m *ConditionFailedError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConditionFailedError.Unmarshal(m, b)
}
func (m *ConditionFailedError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConditionFailedError.Marshal(b, m, deterministic)
}
func (m *ConditionFailedError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConditionFailedError.Merge(m, src)
}
func (m *ConditionFailedError) XXX_Size() int {
	return xxx_messageInfo_ConditionFailedError.Size(m)
}
func (m *ConditionFailedError) XXX_DiscardUnknown() {
	xxx_messageInfo_ConditionFailedError.DiscardUnknown(m)
}

var xxx_messageInfo_ConditionFailedError proto.InternalMessageInfo

func (m *ConditionFailedError) GetActualValue() *Value {
	if m != nil {
		return m.ActualValue
	}
	return nil
}

// Error is a union type containing all available errors.
type Error struct {
	Generic                       *GenericError                       `protobuf:"bytes,1,opt,name=generic" json:"generic,omitempty"`
	NotLeader                     *NotLeaderError                     `protobuf:"bytes,2,opt,name=not_leader,json=notLeader" json:"not_leader,omitempty"`
	RangeNotFound                 *RangeNotFoundError                 `protobuf:"bytes,3,opt,name=range_not_found,json=rangeNotFound" json:"range_not_found,omitempty"`
	RangeKeyMismatch              *RangeKeyMismatchError              `protobuf:"bytes,4,opt,name=range_key_mismatch,json=rangeKeyMismatch" json:"range_key_mismatch,omitempty"`
	ReadWithinUncertaintyInterval *ReadWithinUncertaintyIntervalError `protobuf:"bytes,5,opt,name=read_within_uncertainty_interval,json=readWithinUncertaintyInterval" json:"read_within_uncertainty_interval,omitempty"`
	TransactionAborted            *TransactionAbortedError            `protobuf:"bytes,6,opt,name=transaction_aborted,json=transactionAborted" json:"transaction_aborted,omitempty"`
	TransactionPush               *TransactionPushError               `protobuf:"bytes,7,opt,name=transaction_push,json=transactionPush" json:"transaction_push,omitempty"`
	TransactionRetry              *TransactionRetryError              `protobuf:"bytes,8,opt,name=transaction_retry,json=transactionRetry" json:"transaction_retry,omitempty"`
	TransactionStatus             *TransactionStatusError             `protobuf:"bytes,9,opt,name=transaction_status,json=transactionStatus" json:"transaction_status,omitempty"`
	WriteIntent                   *WriteIntentError                   `protobuf:"bytes,10,opt,name=write_intent,json=writeIntent" json:"write_intent,omitempty"`
	WriteTooOld                   *WriteTooOldError                   `protobuf:"bytes,11,opt,name=write_too_old,json=writeTooOld" json:"write_too_old,omitempty"`
	OpRequiresTxn                 *OpRequiresTxnError                 `protobuf:"bytes,12,opt,name=op_requires_txn,json=opRequiresTxn" json:"op_requires_txn,omitempty"`
	ConditionFailed               *ConditionFailedError               `protobuf:"bytes,13,opt,name=condition_failed,json=conditionFailed" json:"condition_failed,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}                            `json:"-"`
	XXX_unrecognized              []byte                              `json:"-"`
	XXX_sizecache                 int32                               `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_24fe73c7f0ddb19c, []int{13}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetGeneric() *GenericError {
	if m != nil {
		return m.Generic
	}
	return nil
}

func (m *Error) GetNotLeader() *NotLeaderError {
	if m != nil {
		return m.NotLeader
	}
	return nil
}

func (m *Error) GetRangeNotFound() *RangeNotFoundError {
	if m != nil {
		return m.RangeNotFound
	}
	return nil
}

func (m *Error) GetRangeKeyMismatch() *RangeKeyMismatchError {
	if m != nil {
		return m.RangeKeyMismatch
	}
	return nil
}

func (m *Error) GetReadWithinUncertaintyInterval() *ReadWithinUncertaintyIntervalError {
	if m != nil {
		return m.ReadWithinUncertaintyInterval
	}
	return nil
}

func (m *Error) GetTransactionAborted() *TransactionAbortedError {
	if m != nil {
		return m.TransactionAborted
	}
	return nil
}

func (m *Error) GetTransactionPush() *TransactionPushError {
	if m != nil {
		return m.TransactionPush
	}
	return nil
}

func (m *Error) GetTransactionRetry() *TransactionRetryError {
	if m != nil {
		return m.TransactionRetry
	}
	return nil
}

func (m *Error) GetTransactionStatus() *TransactionStatusError {
	if m != nil {
		return m.TransactionStatus
	}
	return nil
}

func (m *Error) GetWriteIntent() *WriteIntentError {
	if m != nil {
		return m.WriteIntent
	}
	return nil
}

func (m *Error) GetWriteTooOld() *WriteTooOldError {
	if m != nil {
		return m.WriteTooOld
	}
	return nil
}

func (m *Error) GetOpRequiresTxn() *OpRequiresTxnError {
	if m != nil {
		return m.OpRequiresTxn
	}
	return nil
}

func (m *Error) GetConditionFailed() *ConditionFailedError {
	if m != nil {
		return m.ConditionFailed
	}
	return nil
}

func init() {
	proto.RegisterType((*GenericError)(nil), "proto.GenericError")
	proto.RegisterType((*NotLeaderError)(nil), "proto.NotLeaderError")
	proto.RegisterType((*RangeNotFoundError)(nil), "proto.RangeNotFoundError")
	proto.RegisterType((*RangeKeyMismatchError)(nil), "proto.RangeKeyMismatchError")
	proto.RegisterType((*ReadWithinUncertaintyIntervalError)(nil), "proto.ReadWithinUncertaintyIntervalError")
	proto.RegisterType((*TransactionAbortedError)(nil), "proto.TransactionAbortedError")
	proto.RegisterType((*TransactionPushError)(nil), "proto.TransactionPushError")
	proto.RegisterType((*TransactionRetryError)(nil), "proto.TransactionRetryError")
	proto.RegisterType((*TransactionStatusError)(nil), "proto.TransactionStatusError")
	proto.RegisterType((*WriteIntentError)(nil), "proto.WriteIntentError")
	proto.RegisterType((*WriteTooOldError)(nil), "proto.WriteTooOldError")
	proto.RegisterType((*OpRequiresTxnError)(nil), "proto.OpRequiresTxnError")
	proto.RegisterType((*ConditionFailedError)(nil), "proto.ConditionFailedError")
	proto.RegisterType((*Error)(nil), "proto.Error")
}

func init() { proto.RegisterFile("errors.proto", fileDescriptor_24fe73c7f0ddb19c) }

var fileDescriptor_24fe73c7f0ddb19c = []byte{
	// 926 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xc6, 0x76, 0x12, 0xc7, 0xc7, 0x76, 0x7e, 0xa6, 0x49, 0xba, 0x14, 0xd2, 0x44, 0x2b, 0x24,
	0x0a, 0x6a, 0x13, 0x09, 0x2a, 0x55, 0x2a, 0x02, 0xa9, 0x69, 0x93, 0x2a, 0xa4, 0x34, 0x68, 0x6a,
	0xe8, 0x0d, 0xd2, 0x6a, 0xb2, 0x3b, 0xde, 0x8c, 0xba, 0x9e, 0x71, 0x67, 0xcf, 0x26, 0xf1, 0x15,
	0x8f, 0xc0, 0x2b, 0xc0, 0x35, 0x97, 0xbc, 0x44, 0x9f, 0x81, 0x8b, 0x5c, 0xf0, 0x24, 0x68, 0x7e,
	0xd6, 0x5e, 0xc7, 0xa5, 0xa1, 0x77, 0xbd, 0xb2, 0xe7, 0x9b, 0xef, 0xfb, 0xe6, 0x8c, 0xe7, 0x9c,
	0xcf, 0xd0, 0xe1, 0x5a, 0x2b, 0x9d, 0xef, 0x0c, 0xb5, 0x42, 0x45, 0xe6, 0xed, 0xc7, 0xad, 0x4e,
	0xac, 0x64, 0x5f, 0xa4, 0x0e, 0xbc, 0x05, 0x09, 0x43, 0xe6, 0xbf, 0xdf, 0x4b, 0x05, 0x9e, 0x16,
	0x27, 0x3b, 0xb1, 0x1a, 0xec, 0xa6, 0x2a, 0x55, 0xbb, 0x16, 0x3e, 0x29, 0xfa, 0x76, 0x65, 0x17,
	0xf6, 0x9b, 0xa3, 0x87, 0x14, 0x3a, 0x4f, 0xb9, 0xe4, 0x5a, 0xc4, 0xfb, 0xe6, 0x18, 0x72, 0x1b,
	0x9a, 0x03, 0x9e, 0xe7, 0x2c, 0xe5, 0x41, 0x6d, 0xbb, 0x76, 0xa7, 0xb5, 0x37, 0xf7, 0xe6, 0x72,
	0xeb, 0x23, 0x5a, 0x82, 0x24, 0x84, 0x96, 0xe6, 0xa8, 0x47, 0xec, 0x24, 0xe3, 0x41, 0x7d, 0xbb,
	0x76, 0x67, 0xd1, 0x33, 0x26, 0x70, 0xf8, 0x1d, 0x2c, 0x3d, 0x57, 0xf8, 0x8c, 0xb3, 0x84, 0x6b,
	0xe7, 0x7a, 0x17, 0x16, 0x32, 0xbb, 0xb4, 0xa6, 0xed, 0xaf, 0x96, 0xdc, 0xe9, 0x3b, 0x94, 0x0f,
	0x33, 0x11, 0x33, 0x6f, 0xe1, 0x39, 0xe1, 0xb7, 0x40, 0x28, 0x93, 0x29, 0x7f, 0xae, 0xf0, 0x40,
	0x15, 0x32, 0x71, 0x1e, 0x9f, 0x43, 0x53, 0xb3, 0x3e, 0x46, 0x22, 0xb1, 0x26, 0x8d, 0xbd, 0x25,
	0x23, 0xfa, 0xe7, 0x72, 0x6b, 0x81, 0xb2, 0x3e, 0x1e, 0x3e, 0xa1, 0x0b, 0x66, 0xfb, 0x30, 0x09,
	0xff, 0xaa, 0xc1, 0xba, 0xd5, 0x1f, 0xf1, 0xd1, 0x0f, 0x22, 0x1f, 0x30, 0x8c, 0x4f, 0x9d, 0xc5,
	0x03, 0x58, 0xd5, 0xfc, 0x75, 0xc1, 0x73, 0x8c, 0x72, 0x64, 0x1a, 0xa3, 0x57, 0x7c, 0x64, 0xcd,
	0x3a, 0x7b, 0x6d, 0x63, 0xf6, 0xf7, 0xe5, 0x56, 0xe3, 0x88, 0x8f, 0xe8, 0xb2, 0x67, 0xbd, 0x30,
	0xa4, 0x23, 0x3e, 0x22, 0x5f, 0x43, 0x09, 0x45, 0x5c, 0x26, 0x56, 0x56, 0x9f, 0x95, 0x75, 0x3d,
	0x67, 0x5f, 0x26, 0x46, 0x74, 0x17, 0xe6, 0xb5, 0x29, 0x23, 0x68, 0xd8, 0x3b, 0x6f, 0x94, 0x77,
	0x36, 0xd8, 0x13, 0x9e, 0xc7, 0x5a, 0x0c, 0x51, 0x69, 0xea, 0x48, 0xe1, 0x1f, 0x35, 0x08, 0x29,
	0x67, 0xc9, 0x4b, 0x81, 0xa7, 0x42, 0xfe, 0x24, 0x63, 0xae, 0x91, 0x09, 0x89, 0xa3, 0x43, 0x89,
	0x5c, 0x9f, 0xb1, 0xcc, 0x5d, 0xe1, 0x3e, 0xb4, 0x50, 0x0c, 0x78, 0x8e, 0x6c, 0x30, 0xf4, 0x3f,
	0xe6, 0x8a, 0x37, 0xee, 0x95, 0x78, 0xf9, 0x22, 0x63, 0x22, 0xd9, 0x07, 0xc2, 0x2f, 0x44, 0x8e,
	0x42, 0xa6, 0xd1, 0x44, 0x5e, 0x7f, 0xa7, 0x7c, 0xb5, 0x54, 0x8c, 0x37, 0xc2, 0x7d, 0xb8, 0xd9,
	0xd3, 0x4c, 0xe6, 0x2c, 0x46, 0xa1, 0xe4, 0xa3, 0x13, 0xa5, 0x91, 0xfb, 0xd7, 0xf9, 0x12, 0x1a,
	0x78, 0x21, 0x7d, 0x45, 0xa4, 0xb4, 0x9c, 0x90, 0xbd, 0xa9, 0x21, 0x85, 0x05, 0xac, 0x55, 0x76,
	0x7e, 0x2c, 0x72, 0xff, 0x3c, 0x9f, 0x5d, 0xe3, 0x61, 0xd5, 0xe4, 0x01, 0xc0, 0xb0, 0xc8, 0x4f,
	0x39, 0x8f, 0x0c, 0xb9, 0x7e, 0xcd, 0x81, 0x2d, 0xc7, 0xed, 0x5d, 0xc8, 0xf0, 0x31, 0xac, 0x57,
	0xcd, 0x4c, 0xbb, 0xbe, 0x7f, 0xed, 0xbf, 0xc0, 0x46, 0x65, 0xe7, 0x05, 0x32, 0x2c, 0xf2, 0xf7,
	0x76, 0x21, 0x1b, 0xd0, 0x18, 0xe4, 0xa9, 0x2d, 0xbe, 0x9c, 0x30, 0x03, 0x84, 0xbf, 0xc2, 0xca,
	0x4b, 0x2d, 0x90, 0x9b, 0x37, 0x97, 0xe8, 0x7c, 0x37, 0xa1, 0xf1, 0x1f, 0x6d, 0x6a, 0xf0, 0xf2,
	0xd8, 0xfa, 0xff, 0x39, 0x76, 0x1b, 0x16, 0x35, 0xcf, 0x55, 0x76, 0xc6, 0x13, 0xdb, 0x94, 0xe5,
	0xec, 0x8e, 0xd1, 0xf0, 0xb7, 0x9a, 0xaf, 0xa0, 0xa7, 0xd4, 0x71, 0x96, 0x7c, 0x00, 0x3d, 0xb7,
	0x06, 0xe4, 0x78, 0x48, 0xf9, 0xeb, 0x42, 0x68, 0x9e, 0xf7, 0x2e, 0xa4, 0x2d, 0x29, 0x7c, 0x0a,
	0x6b, 0x8f, 0x95, 0x4c, 0x84, 0xb9, 0xe1, 0x01, 0x13, 0x59, 0xd9, 0x86, 0xbb, 0xd0, 0x61, 0x31,
	0x16, 0x2c, 0x8b, 0xce, 0x58, 0x56, 0x70, 0x5f, 0x6d, 0xc7, 0x1f, 0xf7, 0xb3, 0xc1, 0x68, 0xdb,
	0x31, 0xec, 0x22, 0xfc, 0xb3, 0x09, 0xf3, 0x4e, 0x7a, 0x0f, 0x9a, 0xa9, 0x4b, 0x42, 0xaf, 0xba,
	0xe1, 0x55, 0xd5, 0x7c, 0xa4, 0x25, 0x87, 0xdc, 0x07, 0x90, 0x0a, 0x23, 0x1f, 0x6b, 0xee, 0x5a,
	0xeb, 0x5e, 0x31, 0x9d, 0x7e, 0xb4, 0x25, 0xcb, 0x35, 0x79, 0x04, 0xcb, 0x76, 0xdc, 0x23, 0xa3,
	0xed, 0x9b, 0x70, 0xf3, 0xe9, 0xf0, 0x71, 0x35, 0x1d, 0xa6, 0x82, 0x8f, 0x76, 0x75, 0x15, 0x23,
	0xdf, 0x03, 0x71, 0x16, 0xaf, 0xf8, 0x28, 0x1a, 0xf8, 0x7c, 0x0b, 0xe6, 0xac, 0xcb, 0xa7, 0x55,
	0x97, 0xab, 0xf1, 0x47, 0x57, 0xf4, 0x15, 0x98, 0x68, 0xd8, 0xd6, 0x9c, 0x25, 0xd1, 0xb9, 0x0d,
	0x9d, 0xa8, 0x98, 0xa4, 0x4e, 0x24, 0x7c, 0xec, 0x04, 0xf3, 0xd6, 0xf9, 0x8b, 0x71, 0x62, 0x5f,
	0x17, 0x51, 0x74, 0x53, 0xbf, 0x8b, 0x43, 0x8e, 0xe1, 0x06, 0x4e, 0xda, 0x33, 0x62, 0x2e, 0x45,
	0x82, 0x05, 0x7b, 0xcc, 0xed, 0xd9, 0x06, 0xae, 0xc6, 0x0c, 0x25, 0x38, 0xb3, 0x41, 0x0e, 0x60,
	0xa5, 0x6a, 0x68, 0x06, 0x3e, 0x68, 0x5a, 0xb7, 0x4f, 0x66, 0xdd, 0xc6, 0x69, 0x43, 0x97, 0x71,
	0x1a, 0x25, 0x87, 0xb0, 0x5a, 0xf5, 0xb1, 0xff, 0x67, 0xc1, 0xe2, 0xd4, 0xef, 0xfa, 0xd6, 0xfc,
	0xa0, 0xd5, 0xe3, 0x2d, 0x4c, 0x9e, 0x41, 0xb5, 0x50, 0xf3, 0x67, 0x83, 0x45, 0x1e, 0xb4, 0xac,
	0xd7, 0xe6, 0xac, 0x57, 0x25, 0x46, 0x68, 0xb5, 0x06, 0x87, 0x93, 0x87, 0xd0, 0x39, 0x37, 0x33,
	0x69, 0xdf, 0x44, 0x62, 0x00, 0xd6, 0xe7, 0xa6, 0xf7, 0xb9, 0x1a, 0x18, 0xb4, 0x7d, 0x3e, 0x41,
	0xc8, 0x37, 0xd0, 0x75, 0x5a, 0x54, 0x2a, 0x52, 0x59, 0x12, 0xb4, 0x67, 0xc5, 0x95, 0x59, 0xf7,
	0x62, 0x87, 0x98, 0x6e, 0x55, 0xc3, 0x48, 0xfb, 0xe1, 0xb3, 0x79, 0xdb, 0x99, 0xea, 0xd6, 0xd9,
	0xc9, 0xa4, 0x5d, 0x55, 0xc5, 0xcc, 0xe3, 0xc4, 0xe5, 0xa0, 0x46, 0x7d, 0x3b, 0xa9, 0x41, 0x77,
	0xea, 0x71, 0xde, 0x36, 0xc7, 0x74, 0x39, 0x9e, 0x46, 0x1f, 0xce, 0xbd, 0xf9, 0x7d, 0xab, 0xf6,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb1, 0xe6, 0x2f, 0x9a, 0x0c, 0x09, 0x00, 0x00,
}

func (this *Error) GetValue() interface{} {
	if this.Generic != nil {
		return this.Generic
	}
	if this.NotLeader != nil {
		return this.NotLeader
	}
	if this.RangeNotFound != nil {
		return this.RangeNotFound
	}
	if this.RangeKeyMismatch != nil {
		return this.RangeKeyMismatch
	}
	if this.ReadWithinUncertaintyInterval != nil {
		return this.ReadWithinUncertaintyInterval
	}
	if this.TransactionAborted != nil {
		return this.TransactionAborted
	}
	if this.TransactionPush != nil {
		return this.TransactionPush
	}
	if this.TransactionRetry != nil {
		return this.TransactionRetry
	}
	if this.TransactionStatus != nil {
		return this.TransactionStatus
	}
	if this.WriteIntent != nil {
		return this.WriteIntent
	}
	if this.WriteTooOld != nil {
		return this.WriteTooOld
	}
	if this.OpRequiresTxn != nil {
		return this.OpRequiresTxn
	}
	if this.ConditionFailed != nil {
		return this.ConditionFailed
	}
	return nil
}

func (this *Error) SetValue(value interface{}) bool {
	switch vt := value.(type) {
	case *GenericError:
		this.Generic = vt
	case *NotLeaderError:
		this.NotLeader = vt
	case *RangeNotFoundError:
		this.RangeNotFound = vt
	case *RangeKeyMismatchError:
		this.RangeKeyMismatch = vt
	case *ReadWithinUncertaintyIntervalError:
		this.ReadWithinUncertaintyInterval = vt
	case *TransactionAbortedError:
		this.TransactionAborted = vt
	case *TransactionPushError:
		this.TransactionPush = vt
	case *TransactionRetryError:
		this.TransactionRetry = vt
	case *TransactionStatusError:
		this.TransactionStatus = vt
	case *WriteIntentError:
		this.WriteIntent = vt
	case *WriteTooOldError:
		this.WriteTooOld = vt
	case *OpRequiresTxnError:
		this.OpRequiresTxn = vt
	case *ConditionFailedError:
		this.ConditionFailed = vt
	default:
		return false
	}
	return true
}
